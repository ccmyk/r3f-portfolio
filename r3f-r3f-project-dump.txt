# R3F Portfolio Project Dump
Generated on: Tue Jul 15 13:41:02 PDT 2025
Project directory: /Users/chrishall/development/r3f

## Project Structure
```
.
├── .contentlayer
│   ├── .cache
│   │   └── v0.5.8
│   │       ├── compiled-contentlayer-config-A4REP6OM.mjs
│   │       ├── compiled-contentlayer-config-A4REP6OM.mjs.map
│   │       ├── compiled-contentlayer-config-TAFNLUZ2.mjs
│   │       ├── compiled-contentlayer-config-TAFNLUZ2.mjs.map
│   │       ├── data-A4REP6OM.json
│   │       └── data-TAFNLUZ2.json
│   ├── generated
│   │   ├── About
│   │   │   ├── _index.json
│   │   │   └── _index.mjs
│   │   ├── Project
│   │   │   ├── _index.json
│   │   │   ├── _index.mjs
│   │   │   ├── projects__project1.md.json
│   │   │   └── projects__project2.md.json
│   │   ├── index.d.ts
│   │   ├── index.mjs
│   │   └── types.d.ts
│   └── package.json
├── content
│   └── projects
│       ├── project1.md
│       └── project2.md
├── docs
├── public
│   ├── fonts
│   │   ├── .DS_Store
│   │   ├── PPNeueMontreal-Medium.json
│   │   ├── PPNeueMontreal-Medium.png
│   │   ├── PPNeueMontreal-Medium.ttf
│   │   ├── PPNeueMontreal-Medium.woff
│   │   ├── PPNeueMontreal-Medium.woff2
│   │   ├── PPNeueMontrealMono-Book.woff
│   │   └── PPNeueMontrealMono-Book.woff2
│   ├── images
│   │   ├── 00_eva_sanchez_abou_home_website-1366x2049.jpg.webp
│   │   ├── 00_eva_sanchez_about_website-1366x2049.jpg.webp
│   │   ├── 00_eva_sanchez_about_website.jpg.webp
│   │   ├── 00_eva_sanchez_playground_website.jpg.webp
│   │   ├── 002_eva_sanchez_playground_website.jpg.webp
│   │   ├── 01_eva_sanchez_kids_agency_website-860x645.jpg.webp
│   │   ├── 01_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 01_eva_sanchez_playground_website.jpg.webp
│   │   ├── 01_eva_sanchez_vibia_landing_page_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_classe_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_classe_website.jpg.webp
│   │   ├── 02_eva_sanchez_now_new_next_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_playground_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_vibia_landing_page_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_villalon_studio_website-860x645.jpg.webp
│   │   ├── 02.2_eva_sanchez_ciclope_fest_cover_website.jpg.webp
│   │   ├── 02.2_eva_sanchez_ciclope_fest_website-860x645.jpg.webp
│   │   ├── 02.2_eva_sanchez_ciclope_fest_website.jpg.webp
│   │   ├── 03_eva_sanchez_banjo_cover_soundscape_website.jpg.webp
│   │   ├── 03_eva_sanchez_classe_website-860x645.jpg.webp
│   │   ├── 03_eva_sanchez_classe_website.jpg.webp
│   │   ├── 03_eva_sanchez_kids_agency_website-860x645.jpg.webp
│   │   ├── 03_eva_sanchez_now_new_next_website-860x645.jpg.webp
│   │   ├── 03_eva_sanchez_playground_website.jpg.webp
│   │   ├── 03_eva_sanchez_vibia_landing_page_website-860x645.jpg.webp
│   │   ├── 04_eva_sanchez_ciclope_fest_website.jpg.webp
│   │   ├── 04_eva_sanchez_now_new_next_website-860x645.jpg.webp
│   │   ├── 04_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 04_eva_sanchez_playground_website.jpg.webp
│   │   ├── 04_eva_sanchez_vibia_landing_page_website-860x645.jpg.webp
│   │   ├── 04_eva_sanchez_villalon_studio_website-860x645.jpg.webp
│   │   ├── 05_eva_sanchez_ciclope_fest_website-860x645.jpg.webp
│   │   ├── 05_eva_sanchez_ciclope_fest_website.jpg.webp
│   │   ├── 05_eva_sanchez_classe_website-860x645.jpg.webp
│   │   ├── 05_eva_sanchez_classe_website.jpg.webp
│   │   ├── 05_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 05_eva_sanchez_playground_website.jpg.webp
│   │   ├── 05_eva_sanchez_villalon_studio_website-860x645.jpg.webp
│   │   ├── 06_eva_sanchez_classe_website-860x645.jpg.webp
│   │   ├── 06_eva_sanchez_classe_website.jpg.webp
│   │   ├── 06_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 06_eva_sanchez_playground_website.jpg.webp
│   │   ├── 07_eva_sanchez_banjo_soundscape_website-860x645.jpg.webp
│   │   ├── 07_eva_sanchez_playground_website.jpg.webp
│   │   ├── 08_eva_sanchez_ciclope_fest_website.jpg.webp
│   │   ├── 08_eva_sanchez_classe_website.jpg.webp
│   │   ├── 08_eva_sanchez_playground_website.jpg.webp
│   │   ├── 08_eva_sanchez_villalon_studio_website-860x645.jpg.webp
│   │   ├── 09_eva_sanchez_kids_agency_website-860x645.jpg.webp
│   │   ├── 09_eva_sanchez_playground_website.jpeg.webp
│   │   ├── 10_eva_sanchez_playground_website.jpg.webp
│   │   ├── 11_eva_sanchez_playground_website.jpg.webp
│   │   ├── 12_eva_sanchez_playground_website.jpg.webp
│   │   ├── 13_eva_sanchez_playground_website.jpg.webp
│   │   ├── 14_eva_sanchez_playground_website.jpg.webp
│   │   ├── 15_eva_sanchez_playground_website.jpg.webp
│   │   ├── 16_eva_sanchez_playground_website.jpg.webp
│   │   ├── 17_eva_sanchez_playground_website.jpg.webp
│   │   ├── 18_eva_sanchez_playground_website.jpg.webp
│   │   ├── 19_eva_sanchez_playground_website.jpg.webp
│   │   ├── 20_eva_sanchez_playground_website.jpg.webp
│   │   ├── 21_eva_sanchez_playground_website.jpg.webp
│   │   ├── 22_eva_sanchez_playground_website.jpg.webp
│   │   ├── 23_eva_sanchez_playground_website.jpg.webp
│   │   ├── 24_eva_sanchez_playground_website.jpg.webp
│   │   ├── 25_eva_sanchez_playground_website.jpg.webp
│   │   ├── 26_eva_sanchez_playground_website.jpg.webp
│   │   ├── 27_eva_sanchez_playground_website.jpg.webp
│   │   ├── 28_eva_sanchez_playground_website.jpg.webp
│   │   ├── 29_eva_sanchez_playground_website.jpg.webp
│   │   ├── 30_eva_sanchez_playground_website.jpg.webp
│   │   ├── 31_eva_sanchez_playground_website.jpg.webp
│   │   ├── 32_eva_sanchez_playground_website.jpg.webp
│   │   ├── 33_eva_sanchez_playground_website.jpg.webp
│   │   ├── 34_eva_sanchez_playground_website.jpg.webp
│   │   ├── 35_eva_sanchez_playground_website.jpg.webp
│   │   ├── 36_eva_sanchez_playground_website.jpg.webp
│   │   ├── 37_eva_sanchez_playground_website.jpg.webp
│   │   ├── 38_eva_sanchez_playground_website.jpg.webp
│   │   ├── 39_eva_sanchez_playground_website.jpg.webp
│   │   ├── 40_eva_sanchez_playground_website.jpg.webp
│   │   ├── 41_eva_sanchez_playground_website.jpg.webp
│   │   ├── 42_eva_sanchez_playground_website.jpg.webp
│   │   ├── 43_eva_sanchez_playground_website.jpg.webp
│   │   ├── 46_eva_sanchez_playground_website.jpg.webp
│   │   ├── 47_eva_sanchez_playground_website.jpg.webp
│   │   ├── 48_eva_sanchez_playground_website.jpg.webp
│   │   ├── 49_eva_sanchez_playground_website.jpg.webp
│   │   ├── 50_eva_sanchez_playground_website.jpg.webp
│   │   └── 51_eva_sanchez_playground_website.jpg.webp
│   ├── videos
│   │   ├── .DS_Store
│   │   ├── 00_eva_sanchez_kids_agency_cover_website.mp4
│   │   ├── 00_eva_sanchez_vibia_landing_page_cover_website.mp4
│   │   ├── 01_eva_sanchez_banjo_cover_soundscape_website.mp4
│   │   ├── 01_eva_sanchez_ciclope_fest_cover_website.mp4
│   │   ├── 01_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 01_eva_sanchez_classe_cover_website.mp4
│   │   ├── 01_eva_sanchez_classe_website.mp4
│   │   ├── 01_eva_sanchez_now_new_next_cover_website.mp4
│   │   ├── 02_eva_sanchez_banjo_cover_soundscape_website.mp4
│   │   ├── 02_eva_sanchez_ciclope_fest_cover_website.mp4
│   │   ├── 02_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 03_eva_sanchez_banjo_cover_soundscape_website.mp4
│   │   ├── 03_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 03_eva_sanchez_now_new_next_cover_website.mp4
│   │   ├── 04_eva_sanchez_classe_website.mp4
│   │   ├── 04_eva_sanchez_kids_agency_cover_website.mp4
│   │   ├── 06_eva_sanchez_ciclope_fest_cover_website.mp4
│   │   ├── 06_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 07_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 07_eva_sanchez_classe_website.mp4
│   │   ├── 09_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 09_eva_sanchez_classe_website.mp4
│   │   ├── 10_eva_sanchez_classe_website.mp4
│   │   ├── 44_eva_sanchez_playground_website.mp4
│   │   └── 45_eva_sanchez_playground_website.mp4
│   ├── .DS_Store
│   ├── file.svg
│   ├── globe.svg
│   ├── next.svg
│   ├── vercel.svg
│   └── window.svg
├── src
│   ├── .contentlayer
│   │   └── generated
│   ├── app
│   │   ├── about
│   │   │   └── page.tsx
│   │   ├── animated-test
│   │   │   └── page.tsx
│   │   ├── index
│   │   │   └── page.tsx
│   │   ├── playground
│   │   │   └── page.tsx
│   │   ├── project
│   │   │   └── [slug]
│   │   │       └── page.tsx
│   │   ├── ClientLayout.tsx
│   │   ├── globals.css
│   │   ├── layout.tsx
│   │   └── page.tsx
│   ├── components
│   │   ├── Animated.tsx
│   │   ├── AnimatedText.tsx
│   │   ├── Footer.tsx
│   │   ├── Loader.tsx
│   │   ├── Mouse.tsx
│   │   ├── Nav.tsx
│   │   └── ProjectCard.tsx
│   ├── hooks
│   │   ├── useAnimationController.ts
│   │   ├── useMouseWatch.ts
│   │   ├── useResponsiveSystem.ts
│   │   └── useSplitText.ts
│   ├── lib
│   │   ├── easings.ts
│   │   ├── fonts.ts
│   │   └── responsive.ts
│   ├── providers
│   │   ├── AnimationProvider.tsx
│   │   ├── ScrollProvider.tsx
│   │   └── WebGLProvider.tsx
│   ├── styles
│   │   ├── about.css
│   │   ├── animations.css
│   │   ├── background.css
│   │   ├── design-system.css
│   │   ├── error.css
│   │   ├── footer.css
│   │   ├── home.css
│   │   ├── loader.css
│   │   ├── loader.pcss
│   │   ├── navigation.css
│   │   ├── playground.css
│   │   ├── project.css
│   │   ├── projects.css
│   │   ├── reset.css
│   │   └── typography.css
│   └── webgl
│       ├── AboutWebGL.tsx
│       ├── BackgroundWebGL.tsx
│       ├── Canvas.tsx
│       ├── FooterWebGL.tsx
│       ├── LoaderWebGL.tsx
│       ├── MediaWebGL.tsx
│       ├── PgelWebGL.tsx
│       ├── PgWebGL.tsx
│       ├── RollWebGL.tsx
│       ├── SliderWebGL.tsx
│       └── TitleWebGL.tsx
├── .DS_Store
├── .env
├── .gitignore
├── contentlayer.config.ts
├── eslint.config.mjs
├── next-env.d.ts
├── next.config.js
├── package.json
├── postcss.config.js
├── README.md
└── tsconfig.json

30 directories, 212 files
```

## Package Configuration

### package.json
```json
{
  "name": "r3f",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@emotion/is-prop-valid": "^1.3.1",
    "@react-three/drei": "^10.5.0",
    "@react-three/fiber": "^9.2.0",
    "clsx": "^2.1.1",
    "contentlayer2": "^0.5.8",
    "framer-motion": "^12.23.5",
    "graphql": "^16.11.0",
    "lenis": "^1.3.4",
    "next": "15.3.5",
    "next-contentlayer2": "^0.5.8",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "split-type": "^0.3.4",
    "three": "^0.178.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@types/node": "^24.0.13",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/three": "^0.178.1",
    "autoprefixer": "^10.4.21",
    "cssnano": "^7.1.0",
    "eslint": "^9.31.0",
    "eslint-config-next": "15.3.5",
    "postcss": "^8.5.6",
    "postcss-custom-media": "^11.0.6",
    "postcss-custom-properties": "^14.0.6",
    "postcss-import": "^16.1.1",
    "postcss-nested": "^7.0.2",
    "typescript": "^5.8.3"
  }
}
```

### tsconfig.json
```json
{
  "compilerOptions": {
    "baseUrl": ".",
    "target": "ES2017",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["src/*"],
      "contentlayer/generated": ["./.contentlayer/generated"]
    }
  },
  "include": [
    "src",
    ".contentlayer",
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}```

### next.config.js
```javascript
// next.config.js
const { withContentlayer } = require('next-contentlayer2')

/** @type {import('next').NextConfig} */
const nextConfig = {
  // Your existing config
}

module.exports = withContentlayer(nextConfig)```

### postcss.config.js
```javascript
module.exports = {
  plugins: {
    'postcss-import': {},
    'postcss-nested': {}, // This is the plugin that allows nested syntax
    'postcss-custom-properties': {},
    'postcss-custom-media': {},
    'autoprefixer': {},
    // Only run cssnano in production
    'cssnano': process.env.NODE_ENV === 'production' ? {} : false,
  },
}```

### eslint.config.mjs
```javascript
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;
```

### contentlayer.config.ts
```typescript
import { defineDocumentType, makeSource } from 'contentlayer2/source-files'

export const Project = defineDocumentType(() => ({
  name: 'Project',
  filePathPattern: `projects/*.md`,
  fields: {
    title: { type: 'string', required: true },
    description: { type: 'string', required: true },
    image: { type: 'string' },
    slug: { type: 'string', required: true },
    tags: { type: 'list', of: { type: 'string' } },
    date: { type: 'date' },
  },
}))

export const About = defineDocumentType(() => ({
  name: 'About',
  filePathPattern: `about.md`,
  fields: {
    title: { type: 'string', required: true },
    description: { type: 'string', required: true },
  },
}))

export default makeSource({
  contentDirPath: 'content',
  documentTypes: [Project, About],
})```

### next-env.d.ts
```typescript
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.
```

## Source Files

### ./.contentlayer/.cache/v0.5.8/compiled-contentlayer-config-A4REP6OM.mjs
```javascript
// contentlayer.config.ts
import { defineDocumentType, makeSource } from "contentlayer2/source-files";
var Project = defineDocumentType(() => ({
  name: "Project",
  filePathPattern: `projects/*.md`,
  fields: {
    title: { type: "string", required: true },
    description: { type: "string", required: true },
    image: { type: "string" },
    slug: { type: "string", required: true },
    tags: { type: "list", of: { type: "string" } },
    date: { type: "date" }
  }
}));
var contentlayer_config_default = makeSource({
  contentDirPath: "content",
  documentTypes: [Project]
});
export {
  Project,
  contentlayer_config_default as default
};
//# sourceMappingURL=compiled-contentlayer-config-A4REP6OM.mjs.map
```

### ./.contentlayer/.cache/v0.5.8/compiled-contentlayer-config-TAFNLUZ2.mjs
```javascript
// contentlayer.config.ts
import { defineDocumentType, makeSource } from "contentlayer2/source-files";
var Project = defineDocumentType(() => ({
  name: "Project",
  filePathPattern: `projects/*.md`,
  fields: {
    title: { type: "string", required: true },
    description: { type: "string", required: true },
    image: { type: "string" },
    slug: { type: "string", required: true },
    tags: { type: "list", of: { type: "string" } },
    date: { type: "date" }
  }
}));
var About = defineDocumentType(() => ({
  name: "About",
  filePathPattern: `about.md`,
  fields: {
    title: { type: "string", required: true },
    description: { type: "string", required: true }
  }
}));
var contentlayer_config_default = makeSource({
  contentDirPath: "content",
  documentTypes: [Project, About]
});
export {
  About,
  Project,
  contentlayer_config_default as default
};
//# sourceMappingURL=compiled-contentlayer-config-TAFNLUZ2.mjs.map
```

### ./.contentlayer/generated/About/_index.mjs
```javascript
// NOTE This file is auto-generated by Contentlayer



export const allAbouts = []
```

### ./.contentlayer/generated/index.d.ts
```typescript
// NOTE This file is auto-generated by Contentlayer

import { Project, About, DocumentTypes, DataExports } from './types'
import { SourceProvideSchemaErrorJSON, SourceFetchDataErrorJSON } from 'contentlayer2/core'

export * from './types'

export declare const allProjects: Project[]
export declare const allAbouts: About[]

export declare const allDocuments: DocumentTypes[]


```

### ./.contentlayer/generated/index.mjs
```javascript
// NOTE This file is auto-generated by Contentlayer

export { isType } from 'contentlayer2/client'

// NOTE During development Contentlayer imports from `.mjs` files to improve HMR speeds.
// During (production) builds Contentlayer it imports from `.json` files to improve build performance.
import { allProjects } from './Project/_index.mjs'
import { allAbouts } from './About/_index.mjs'

export { allProjects, allAbouts }

export const allDocuments = [...allProjects, ...allAbouts]


```

### ./.contentlayer/generated/Project/_index.mjs
```javascript
// NOTE This file is auto-generated by Contentlayer

import projects__project1Md from './projects__project1.md.json' with { type: 'json' }
import projects__project2Md from './projects__project2.md.json' with { type: 'json' }

export const allProjects = [projects__project1Md, projects__project2Md]
```

### ./.contentlayer/generated/types.d.ts
```typescript
// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type About = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'About'
  title: string
  description: string
  /** Markdown file body */
  body: Markdown

}

export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  title: string
  description: string
  image?: string | undefined
  slug: string
  tags?: string[] | undefined
  date?: IsoDateTimeString | undefined
  /** Markdown file body */
  body: Markdown

}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = About | Project
export type DocumentTypeNames = 'About' | 'Project'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allProjects: Project[]
  allAbouts: About[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  About: About
  Project: Project
}

export type NestedTypeMap = {

}

 ```

### ./contentlayer.config.ts
```typescript
import { defineDocumentType, makeSource } from 'contentlayer2/source-files'

export const Project = defineDocumentType(() => ({
  name: 'Project',
  filePathPattern: `projects/*.md`,
  fields: {
    title: { type: 'string', required: true },
    description: { type: 'string', required: true },
    image: { type: 'string' },
    slug: { type: 'string', required: true },
    tags: { type: 'list', of: { type: 'string' } },
    date: { type: 'date' },
  },
}))

export const About = defineDocumentType(() => ({
  name: 'About',
  filePathPattern: `about.md`,
  fields: {
    title: { type: 'string', required: true },
    description: { type: 'string', required: true },
  },
}))

export default makeSource({
  contentDirPath: 'content',
  documentTypes: [Project, About],
})```

### ./eslint.config.mjs
```javascript
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;
```

### ./next-env.d.ts
```typescript
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.
```

### ./next.config.js
```javascript
// next.config.js
const { withContentlayer } = require('next-contentlayer2')

/** @type {import('next').NextConfig} */
const nextConfig = {
  // Your existing config
}

module.exports = withContentlayer(nextConfig)```

### ./postcss.config.js
```javascript
module.exports = {
  plugins: {
    'postcss-import': {},
    'postcss-nested': {}, // This is the plugin that allows nested syntax
    'postcss-custom-properties': {},
    'postcss-custom-media': {},
    'autoprefixer': {},
    // Only run cssnano in production
    'cssnano': process.env.NODE_ENV === 'production' ? {} : false,
  },
}```

### ./src/app/about/page.tsx
```typescript
// src/app/about/page.tsx 
```

### ./src/app/animated-test/page.tsx
```typescript
// src/app/animated-test/page.tsx 
"use client";

import { Animated } from "@/components/Animated";

export default function AnimatedTestPage() {
  return (
    <main style={{
      padding: '5rem',
      background: '#050505',
      color: '#F8F6F2',
      minHeight: '200vh' // Make page scrollable to test scroll-in animations
    }}>
      
      <div style={{ marginBottom: '8rem' }}>
        <h2 style={{ fontSize: '1rem', color: '#8a8a8a', marginBottom: '1rem' }}>
          Test 1: 'Awrite' variant (character scramble)
        </h2>
        
        <Animated
          as="h1"
          variant="Awrite"
          text="Interactive Designer"
          className="tt1" // Use a class from your typography system
        />
      </div>

      <div style={{ marginBottom: '8rem', display: 'inline-block' }}>
        <h2 style={{ fontSize: '1rem', color: '#8a8a8a', marginBottom: '1rem' }}>
          Test 2: 'Awrite-inv' variant (inverted style)
        </h2>
        
        <Animated
          as="a" // Renders as an anchor tag
          href="#"
          variant="Awrite-inv"
          text="Let's Talk"
          className="tt3" // Use a class from your typography system
        />
      </div>

      <div style={{ marginBottom: '8rem' }}>
        <h2 style={{ fontSize: '1rem', color: '#8a8a8a', marginBottom: '1rem' }}>
          Test 3: 'Aline' variant (line-by-line reveal)
        </h2>
        
        <Animated
          as="p"
          variant="Aline"
          // Use a template literal with `\n` to create line breaks
          text={"This is the first animated line.\nAnd this is the second."}
          className="tt3"
          lineStagger={0.15} // You can override default timings
        />
      </div>

      <div style={{ marginTop: '50vh', marginBottom: '8rem' }}>
         <h2 style={{ fontSize: '1rem', color: '#8a8a8a', marginBottom: '1rem' }}>
          Test 4: Scroll-triggered animation
        </h2>
        <Animated
          as="h2"
          variant="Awrite"
          text="[SCROLL TO EXPLORE]"
          className="tt3"
        />
      </div>

    </main>
  );
}
```

### ./src/app/ClientLayout.tsx
```typescript
// src/app/ClientLayout.tsx 
"use client";

import { Nav } from '@/components/Nav';
import { Mouse } from '@/components/Mouse';
import { ScrollProvider } from '@/providers/ScrollProvider';
import { AnimationProvider } from '@/providers/AnimationProvider';

export function ClientLayout({ children }: { children: React.ReactNode }) {
  return (
    // Foundational providers wrap more specific ones.
    <ScrollProvider>
      <AnimationProvider>
        <Nav />
        <Mouse />
        <main>{children}</main>
      </AnimationProvider>
    </ScrollProvider>
  );
}
```

### ./src/app/globals.css
```css
/* src/app/globals.css */

/* Update all imports to use the .css extension */
@import '../styles/reset.css';
@import '../styles/typography.css';
@import '../styles/design-system.css';
@import '../styles/animations.css';
@import '../styles/home.css';
@import '../styles/navigation.css';
@import '../styles/footer.css';
@import '../styles/loader.css';
@import '../styles/background.css';
@import '../styles/about.css';
@import '../styles/error.css';
@import '../styles/playground.css';
@import '../styles/project.css';
@import '../styles/projects.css';

/* Global styles */
html {
  scroll-behavior: smooth;
}

body {
  font-family: 'montrealbook', sans-serif;
  color: var(--color-text-primary);
  background: var(--color-bg-primary);
  overflow-x: hidden;
}

/* Prevent scroll restoration */
html {
  scroll-behavior: auto;
}

/* Lenis smooth scroll classes */
.lenis-stopped {
  overflow: hidden;
}

/* Base HTML and Body styles */
html {
  font-size: var(--base-font-size);
  line-height: var(--base-line-height);
}

body {
  font-family: var(--font-primary);
  background-color: var(--color-bg-primary);
  color: var(--color-text-primary);
  font-weight: var(--font-weight-normal);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-x: hidden;
}```

### ./src/app/index/page.tsx
```typescript
// src/app/index/page.tsx 
```

### ./src/app/layout.tsx
```typescript
// src/app/layout.tsx 
import { ClientLayout } from './ClientLayout';
import { montreal, montrealbook } from '@/lib/fonts';
import './globals.css';

export const metadata = {
  title: 'Chris Hall - Portfolio',
  description: 'Art Director and Designer',
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en" className={`${montreal.variable} ${montrealbook.variable}`}>
      <body>
        {/* ClientLayout now contains the ScrollProvider and other client components */}
        <ClientLayout>{children}</ClientLayout>
      </body>
    </html>
  );
}
```

### ./src/app/page.tsx
```typescript
// src/app/page.tsx
"use client";

// We are not importing anything else for this test.
// We are only testing the Nav component's animation.

export default function HomePage() {
  return (
    <main style={{
      // An empty page to provide a clean testing environment
      height: '200vh',
      background: '#050505',
    }}>
      {/* The <Nav /> component is rendered inside src/app/ClientLayout.tsx.
        It will automatically appear and animate based on the cues from AnimationProvider.
        We don't need to do anything else on this page to test it.
      */}
    </main>
  );
}
```

### ./src/app/playground/page.tsx
```typescript
// src/app/playground/page.tsx 
```

### ./src/app/project/[slug]/page.tsx
```typescript
// src/app/project/[slug]/page.tsx 
```

### ./src/components/Animated.tsx
```typescript
// src/components/Animated.tsx 
import React from 'react';
import { motion, Variants } from 'framer-motion';
import { power4InOut } from '@/lib/easings';

// --- FIX: Use a deterministic function to generate scramble characters ---
// This uses the character's index to pick from the set, ensuring the server
// and client always generate the same "random" sequence.
const getDeterministicChar = (characterSet: string, index: number): string => {
  return characterSet[index % characterSet.length];
};

// --- Component Props Interface ---
type AnimatedProps<T extends React.ElementType> = {
  as?: T;
  text: string;
  variant: 'Awrite' | 'Atext' | 'Aline' | 'Awrite-inv';
  className?: string;
  stagger?: number;
  delay?: number;
  scrambleDuration?: number;
  revealDuration?: number;
  scrambleChars?: string;
  scrambleCount?: number;
  lineStagger?: number;
  lineDuration?: number;
} & Omit<React.ComponentPropsWithoutRef<T>, 'as' | 'variant'>;


// --- The Main Component ---
export const Animated = <T extends React.ElementType = 'div'>({
  as,
  text,
  variant,
  className = '',
  stagger = 0.03,
  delay = 0,
  scrambleDuration = 0.16,
  revealDuration = 0.3,
  scrambleChars = '##·$%&/=€|()@+09*+]',
  scrambleCount = 2,
  lineStagger = 0.1,
  lineDuration = 0.6,
  ...rest
}: AnimatedProps<T>) => {
  const isLineBased = variant === 'Atext' || variant === 'Aline';
  // FIX: Default to 'div' for line-based animations to prevent invalid nesting.
  // A <p> tag can't contain divs. This ensures valid HTML by default.
  const Tag = as || (isLineBased ? 'div' : 'span');

  const baseClass = {
    'Awrite': 'Awrite',
    'Awrite-inv': 'Awrite Awrite-inv',
    'Atext': 'Atext',
    'Aline': 'Aline',
  }[variant];

  if (variant === 'Awrite' || variant === 'Awrite-inv') {
    const characters = Array.from(text);
    const containerVariants: Variants = {
      hidden: {},
      visible: { transition: { delayChildren: delay, staggerChildren: stagger } },
    };

    return (
      <Tag className={`${baseClass} ${className}`} aria-label={text} {...rest}>
        <motion.span
            style={{ display: 'inline-block' }}
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true, amount: 0.5 }}
        >
          {characters.map((char, charIndex) => {
            // FIX: Use the deterministic function
            const fakes = Array.from({ length: scrambleCount }).map((_, i) => getDeterministicChar(scrambleChars, charIndex + i));
            return (
              <span key={charIndex} className="char" style={{ display: 'inline-block', position: 'relative' }}>
                <motion.span
                  className="n"
                  style={{ position: 'relative', zIndex: 1, opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: scrambleCount * scrambleDuration, duration: revealDuration, ease: power4InOut }}
                >
                  {char === ' ' ? '\u00A0' : char}
                </motion.span>
                {fakes.map((fakeChar, fakeIndex) => (
                  <motion.span
                    key={fakeIndex}
                    className="f"
                    style={{ position: 'absolute', top: 0, left: 0, opacity: 0, transformOrigin: 'left center' }}
                    initial={{ opacity: 1, scaleX: 1 }}
                    animate={{ opacity: 0, scaleX: 0 }}
                    transition={{ delay: fakeIndex * (scrambleDuration / scrambleCount), duration: scrambleDuration, ease: power4InOut }}
                  >
                    {fakeChar}
                  </motion.span>
                ))}
              </span>
            );
          })}
        </motion.span>
      </Tag>
    );
  }

  if (isLineBased) {
    const lines = text.split('\n');
    const containerVariants: Variants = {
        hidden: {},
        visible: { transition: { delayChildren: delay, staggerChildren: lineStagger } },
    };
    const lineVariants: Variants = {
        hidden: { opacity: 0, y: '50%' },
        visible: {
            opacity: 1,
            y: '0%',
            transition: { duration: lineDuration, ease: power4InOut },
        },
    };

    return (
      <Tag className={`${baseClass} ${className}`} {...rest}>
        <motion.div
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true, amount: 0.5 }}
        >
            {lines.map((line, index) => (
                // This structure is now valid: the parent Tag is a div (by default)
                // which can safely contain other divs.
                <div key={index} className="line" style={{ overflow: 'hidden' }}>
                    <motion.div variants={lineVariants}>
                        {line.trim() === '' ? '\u00A0' : line}
                    </motion.div>
                </div>
            ))}
        </motion.div>
      </Tag>
    );
  }

  return null;
};
```

### ./src/components/AnimatedText.tsx
```typescript
```

### ./src/components/Footer.tsx
```typescript
// src/components/Footer.tsx 
'use client'

import { useResponsiveSystem } from '@/hooks/useResponsiveSystem';
import clsx from 'clsx';
// import styles from './Footer.module.css'; // Assuming CSS Modules

export function Footer() {
  const { isDesktop } = useResponsiveSystem();

  return (
    <footer /* className={clsx(styles.footer, isDesktop && styles.isDesktop)} */>
      {/*... a footer structure that matches the CSS... */}
    </footer>
  );
}```

### ./src/components/Loader.tsx
```typescript
// src/components/Loader.tsx 
'use client'

import { useState, useEffect } from 'react'
import { motion, animate } from 'framer-motion'
import { power2InOut } from '@/lib/easings'
import { AnimatedText } from './AnimatedText'

export function Loader({ onComplete }: { onComplete: () => void }) {
  const [count, setCount] = useState(0)

  useEffect(() => {
    const controls = animate(0, 100, {
      duration: 2.6,
      ease: power2InOut,
      onUpdate: (value) => {
        if (value < 42) {
          setCount(Math.round(value * 42 / 2)) // 0-42 in 2s
        } else if (value < 90) {
          setCount(Math.round(42 + (value - 42) * 48 / 8)) // 42-90 in 0.6s
        } else {
          setCount(Math.round(value)) // 90-100 in 0.49s
        }
      },
      onComplete,
    })

    return () => controls.stop()
  }, [onComplete])

  return (
    <motion.div
      initial={{ opacity: 1 }}
      animate={{ opacity: 0 }}
      transition={{ duration: 0.5, delay: 2.6, ease: power2InOut }}
      className="loader"
    >
      <div className="loader_tp">{count}%</div>
      <AnimatedText text="Loading..." type="char" className="loader_bp Awrite" isVisible={true} />
    </motion.div>
  )
}
```

### ./src/components/Mouse.tsx
```typescript
// src/components/Mouse.tsx 
'use client'

import { useEffect, useRef } from 'react'
import { motion } from 'framer-motion'

export function Mouse() {
  const cursorRef = useRef<HTMLDivElement>(null)

  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      if (cursorRef.current) {
        cursorRef.current.style.transform = `translate(${e.clientX}px, ${e.clientY}px)`
      }
    }
    window.addEventListener('mousemove', handleMouseMove)
    return () => window.removeEventListener('mousemove', handleMouseMove)
  }, [])

  return (
    <motion.div
      ref={cursorRef}
      className="mouse"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.4, delay: 2.6 }}
    />
  )
}
```

### ./src/components/Nav.tsx
```typescript
// src/components/Nav.tsx
"use client";

import { motion } from 'framer-motion';
import { useAnimations } from '@/providers/AnimationProvider';
import { Animated } from './Animated';
import { power4InOut } from '@/lib/easings';

export function Nav() {
  const { isNavVisible } = useAnimations();

  return (
    // This container's animation matches the simple opacity change in nav_index.js.
    // The real choreography happens inside.
    <motion.nav
      className="nav"
      initial={{ opacity: 0 }}
      animate={{ opacity: isNavVisible ? 1 : 0 }}
      transition={{ duration: 0.5, ease: "linear" }} // A simple, fast fade as a container
    >
      <div className="nav_left">
        <a className="nav_logo">
          {/* This component only renders when the nav is cued, just like the event-based system. */}
          {isNavVisible && (
            <Animated
              as="span"
              variant="Awrite"
              text="CHRIS HALL"
              // Timings and easing are taken directly from your anims.js and documentation
              stagger={0.05}
              delay={0.2} // Delay after the nav container appears
              revealDuration={0.3}
              scrambleDuration={0.16}
            />
          )}
        </a>
        {/* The clock would be its own component and would also listen for isNavVisible */}
      </div>
      <div className="nav_right">
        <div className="nav_right_ops">
          {isNavVisible && (
            <Animated
              as="a"
              href="#"
              variant="Awrite-inv"
              text="LET'S TALK"
              className="tt3 Ms" // .Ms class for faster timing, as seen in anims.js
              stagger={0.03}
              delay={0.5}
              revealDuration={0.22} // Faster reveal for hover elements
            />
          )}
        </div>
      </div>
    </motion.nav>
  );
}
```

### ./src/components/ProjectCard.tsx
```typescript
// src/components/ProjectCard.tsx 
'use client'

import { Project } from 'contentlayer/generated'
import { AnimatedText } from './AnimatedText'

interface ProjectCardProps {
  project: Project
  isVisible: boolean
  delay: number
}

export function ProjectCard({ project, isVisible, delay }: ProjectCardProps) {
  return (
    <div className="cnt_prj">
      <div className="cnt_prj_t">
        <AnimatedText
          text={project.title}
          type="char"
          className="Awrite"
          isVisible={isVisible}
          startDelay={delay}
        />
      </div>
      <div className="cnt_prj_im">
        <img src={project.image} alt={project.title} />
      </div>
    </div>
  )
}
```

### ./src/hooks/useAnimationController.ts
```typescript
// src/hooks/useAnimationController.ts 
'use client'

import { useState, useEffect, useCallback } from 'react'
import { useInView } from 'framer-motion'
import { useScroll } from '@/providers/ScrollProvider'

interface AnimationState {
  loaderComplete: boolean
  navVisible: boolean
  heroVisible: boolean
  projectsVisible: boolean
  aboutVisible: boolean
  footerVisible: boolean
}

export function useAnimationController() {
  const [state, setState] = useState<AnimationState>({
    loaderComplete: false,
    navVisible: false,
    heroVisible: false,
    projectsVisible: false,
    aboutVisible: false,
    footerVisible: false,
  })

  const { lenis } = useScroll()

  useEffect(() => {
    if (!lenis) return

    const startAnimations = async () => {
      // Loader (0-2600ms)
      await new Promise((resolve) => setTimeout(resolve, 2600))
      setState((prev) => ({ ...prev, loaderComplete: true, navVisible: true }))

      // Hero (3000-6000ms)
      await new Promise((resolve) => setTimeout(resolve, 400))
      setState((prev) => ({ ...prev, heroVisible: true }))

      // Projects (6000-8000ms)
      await new Promise((resolve) => setTimeout(resolve, 3000))
      setState((prev) => ({ ...prev, projectsVisible: true }))

      // About (8000-10000ms)
      await new Promise((resolve) => setTimeout(resolve, 2000))
      setState((prev) => ({ ...prev, aboutVisible: true }))

      // Footer (10000-12000ms)
      await new Promise((resolve) => setTimeout(resolve, 2000))
      setState((prev) => ({ ...prev, footerVisible: true }))
    }

    startAnimations()
    lenis.start()

    return () => {
      lenis.stop()
    }
  }, [lenis])

  const observeElement = useCallback((ref: React.RefObject<HTMLElement>, key: keyof AnimationState) => {
    const { inView } = useInView({ ref, threshold: 0, triggerOnce: false })
    useEffect(() => {
      if (inView) {
        setState((prev) => ({ ...prev, [key]: true }))
      }
    }, [inView, key])
  }, [])

  return { state, observeElement }
}
```

### ./src/hooks/useMouseWatch.ts
```typescript
// src/hooks/useMouseWatch.ts 
'use client'

import { useEffect, useRef } from 'react'
import { Vector2 } from 'three'

export function useMouseWatch() {
  const mouse = useRef(new Vector2(0, 0))

  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      const x = (e.clientX / window.innerWidth) * 2 - 1
      const y = -(e.clientY / window.innerHeight) * 2 + 1
      mouse.current.set(x, y)
    }
    window.addEventListener('mousemove', handleMouseMove)
    return () => window.removeEventListener('mousemove', handleMouseMove)
  }, [])

  return mouse
}
```

### ./src/hooks/useResponsiveSystem.ts
```typescript
// src/hooks/useResponsiveSystem.ts 
'use client'

import { useEffect, useState } from 'react'

export function useResponsiveSystem() {
  const [isMobile, setIsMobile] = useState(false)

  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth <= 768)
    }
    handleResize()
    window.addEventListener('resize', handleResize)
    return () => window.removeEventListener('resize', handleResize)
  }, [])

  return { isMobile }
}
```

### ./src/hooks/useSplitText.ts
```typescript
// src/hooks/useSplitText.ts
import { useLayoutEffect, useState } from 'react';
import SplitType, { SplitTypeOptions } from 'split-type';

export function useSplitText(
  ref: React.RefObject<HTMLElement>,
  options?: SplitTypeOptions
) {
  const [instance, setInstance] = useState<SplitType | null>(null);

  useLayoutEffect(() => {
    if (ref.current) {
      const splitInstance = new SplitType(ref.current, options);
      setInstance(splitInstance);

      return () => {
        splitInstance.revert();
      };
    }
  }, [ref, options]);

  return instance;
}```

### ./src/lib/easings.ts
```typescript
// src/lib/easings.ts 

// GSAP's power2.inOut
export const power2InOut = [0.68, 0, 0.32, 1] as const;

// GSAP's power4.inOut
export const power4InOut = [0.76, 0, 0.24, 1] as const;


// addtional easings 

// GSAP's power1.inOut (equivalent to easeInOutQuad)
export const power1InOut = [0.455, 0.03, 0.515, 0.955] as const;

// GSAP's power3.inOut (easeInOutQuart)
export const power3InOut = [0.77, 0, 0.175, 1] as const;
```

### ./src/lib/fonts.ts
```typescript
// src/lib/fonts.ts 
import localFont from 'next/font/local'

// Define your local fonts
export const montreal = localFont({
  src: '../../public/fonts/PPNeueMontreal-Medium.woff2',
  display: 'swap',
  variable: '--font-montreal', // This is the CSS variable name
})

export const montrealbook = localFont({
  src: '../../public/fonts/PPNeueMontrealMono-Book.woff2',
  display: 'swap',
  variable: '--font-montrealbook', // This is the CSS variable name
})
```

### ./src/lib/responsive.ts
```typescript
// src/lib/responsive.ts 

interface DesignConfig {
  L: {
    w: number
    h: number
    multi: number
    total: number
    ratio: number
  }
  P: {
    w: number
    h: number
    multi: number
    total: number
  }
}

export const designConfig: DesignConfig = {
  L: {
    w: 1440,
    h: 800,
    multi: 0.4,
    total: 0,
    ratio: 5.56
  },
  P: {
    w: 390,
    h: 640,
    multi: 0.4,
    total: 0
  }
}

export function initializeResponsiveSystem() {
  // Calculate responsive multipliers
  designConfig.L.total = (designConfig.L.w / window.innerWidth) * 10
  designConfig.L.total = 10 - ((10 - designConfig.L.total) * designConfig.L.multi)
  designConfig.L.total = Math.min(10, designConfig.L.total)

  designConfig.P.total = (designConfig.P.w / window.innerWidth) * 10
  designConfig.P.total = 10 - ((10 - designConfig.P.total) * designConfig.P.multi)
  designConfig.P.total = Math.min(10, designConfig.P.total)

  // Set CSS custom properties
  document.documentElement.style.setProperty('--ck_multiL', designConfig.L.total.toString())
  document.documentElement.style.setProperty('--ck_multiP', designConfig.P.total.toString())
  document.documentElement.style.setProperty('--ck_hvar', `${window.innerHeight}px`)
  document.documentElement.style.setProperty('--ck_accent', '#fff')
  document.documentElement.style.setProperty('--ck_other', '#050505')

  // Device detection classes
  const isTouch = 'ontouchstart' in window
  if (isTouch) {
    document.documentElement.classList.add('T')
    document.documentElement.style.setProperty('--ck_hscr', `${window.screen.height}px`)
  } else {
    document.documentElement.classList.add('D')
    document.documentElement.style.setProperty('--ck_hscr', `${window.innerHeight}px`)
  }
}

export function updateResponsiveSystem() {
  initializeResponsiveSystem()
}
```

### ./src/providers/AnimationProvider.tsx
```typescript
// src/providers/AnimationProvider.tsx
"use client";

import React, { createContext, useContext, useState, useEffect } from 'react';

// This defines the "cues" our animation system will use.
interface AnimationContextType {
  isNavVisible: boolean;
  isHeroVisible: boolean;
  // We will add more cues here later (isProjectsVisible, etc.)
}

const AnimationContext = createContext<AnimationContextType | undefined>(undefined);

export const AnimationProvider = ({ children }: { children: React.ReactNode }) => {
  const [isNavVisible, setNavVisible] = useState(false);
  const [isHeroVisible, setHeroVisible] = useState(false);

  useEffect(() => {
    // This sequence REPLACES the old setTimeout-based master timeline.
    // We are disabling the loader for now by using short delays.

    // Cue 1: Show the Nav. (Matches the 2600ms mark in your docs)
    const navTimer = setTimeout(() => {
      setNavVisible(true);
    }, 200); // Using a short delay for testing

    // Cue 2: Show the Hero section. (Matches the 3000ms mark in your docs)
    const heroTimer = setTimeout(() => {
      setHeroVisible(true);
    }, 500); // A slightly longer delay

    return () => {
      clearTimeout(navTimer);
      clearTimeout(heroTimer);
    };
  }, []);

  const value = { isNavVisible, isHeroVisible };

  return (
    <AnimationContext.Provider value={value}>
      {children}
    </AnimationContext.Provider>
  );
};

export const useAnimations = (): AnimationContextType => {
  const context = useContext(AnimationContext);
  if (context === undefined) {
    throw new Error('useAnimations must be used within an AnimationProvider');
  }
  return context;
};
```

### ./src/providers/ScrollProvider.tsx
```typescript
// src/providers/ScrollProvider.tsx 
'use client'

import { createContext, useContext, useEffect, useRef } from 'react'
import Lenis from 'lenis'

const ScrollContext = createContext<{ lenis: Lenis | null }>({ lenis: null })

export function ScrollProvider({ children }: { children: React.ReactNode }) {
  const lenisRef = useRef<Lenis | null>(null)

  useEffect(() => {
    lenisRef.current = new Lenis({
      lerp: 0.04,
      duration: 0.8,
      smoothWheel: true,
    })

    const raf = (time: number) => {
      lenisRef.current?.raf(time)
      requestAnimationFrame(raf)
    }
    requestAnimationFrame(raf)

    return () => {
      lenisRef.current?.destroy()
    }
  }, [])

  return (
    <ScrollContext.Provider value={{ lenis: lenisRef.current }}>
      {children}
    </ScrollContext.Provider>
  )
}

export function useScroll() {
  return useContext(ScrollContext)
}
```

### ./src/providers/WebGLProvider.tsx
```typescript
// src/providers/WebGLProvider.tsx 
'use client'

import { Canvas } from '@react-three/fiber'
import { useThree } from '@react-three/fiber'
import { useEffect } from 'react'

// Component that uses R3F hooks - must be inside Canvas
function CanvasContent({ children }: { children: React.ReactNode }) {
  const { gl } = useThree()

  useEffect(() => {
    // Global WebGL setup (e.g., pixel ratio, antialiasing)
    gl.setPixelRatio(Math.min(window.devicePixelRatio, 2))
  }, [gl])

  return <>{children}</>
}

export function WebGLProvider({ children }: { children: React.ReactNode }) {
  return (
    <Canvas
      gl={{ antialias: true }}
      camera={{ position: [0, 0, 5], fov: 75 }}
      style={{ width: '100%', height: '100vh' }}
    >
      <CanvasContent>{children}</CanvasContent>
    </Canvas>
  )
}
```

### ./src/styles/about.css
```css
/* src/styles/about.css */

.about_intro {
  min-height: 100vh;
  height: 100lvh;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xxl) var(--spacing-page);

  & .cnt {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-direction: column;
    padding-bottom: 6.7rem;

    @media (--mobile) {
      overflow-x: clip;
      padding-bottom: 4.2rem;
    }

    @media (--mobile) and (max-width: 430px) {
      padding-bottom: 6.7rem;
    }
  }

  & .Atext {
    text-align: center;
    --dark: #8a8a8a;
    max-width: 60ch;
    margin: 0 auto;
  }

  & .Atitle {
    margin-bottom: var(--spacing-md);
    text-align: center;
  }
}

.about_content {
  padding: var(--spacing-xxl) var(--spacing-page);

  & .section {
    max-width: 80ch;
    margin: 0 auto var(--spacing-xxl);

    & h2 {
      margin-bottom: var(--spacing-md);
    }

    & p {
      margin-bottom: var(--spacing-sm);
      color: var(--color-text-secondary);
      line-height: 1.6;
    }

    & ul {
      margin-bottom: var(--spacing-sm);
      padding-left: var(--spacing-md);

      & li {
        margin-bottom: var(--spacing-xs);
        color: var(--color-text-secondary);
      }
    }
  }
}

.about_skills {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--spacing-md);
  margin-top: var(--spacing-lg);

  & .skill_category {
    padding: var(--spacing-md);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-sm);

    & h3 {
      margin-bottom: var(--spacing-sm);
      color: var(--color-text-primary);
    }

    & ul {
      list-style: none;
      padding: 0;

      & li {
        padding: var(--spacing-xs) 0;
        color: var(--color-text-secondary);
        border-bottom: 1px solid var(--color-border);

        &:last-child {
          border-bottom: none;
        }
      }
    }
  }
}

.about_contact {
  text-align: center;
  margin-top: var(--spacing-xxl);
  padding: var(--spacing-xl);
  background: var(--color-bg-secondary);
  border-radius: var(--border-radius-md);

  & .Atitle {
    margin-bottom: var(--spacing-md);
  }

  & .Atext {
    margin-bottom: var(--spacing-lg);
    color: var(--color-text-secondary);
  }

  & .contact_links {
    display: flex;
    justify-content: center;
    gap: var(--spacing-md);
    flex-wrap: wrap;

    & a {
      display: inline-flex;
      align-items: center;
      gap: var(--spacing-xs);
      padding: var(--spacing-sm) var(--spacing-md);
      border: 1px solid var(--color-border);
      border-radius: var(--border-radius-sm);
      color: var(--color-text-primary);
      text-decoration: none;
      transition: all 0.3s ease;

      &:hover {
        background: var(--color-accent);
        color: var(--color-bg-primary);
        border-color: var(--color-accent);
      }
    }
  }
}
```

### ./src/styles/animations.css
```css
/* src/styles/animations.css */

/* Animation base classes for text splitting/writing effects */
.Awrite,
.Atext {
  position: relative;
  text-transform: uppercase;
  
  /* Intersection observer helper */
  .iO {
    position: absolute;
    left: 0;
    top: 150%;
    height: 10px;
    pointer-events: none;
  }
  
  /* Character-level styling for split text */
  .char {
    position: relative;
    pointer-events: none;
    
    /* Background block (unused in current implementation) */
    .b {
      position: absolute;
      left: 0;
      top: 0;
      background: var(--color-text-primary);
      width: 1.1rem;
      height: 1.1rem;
      display: none;
    }
    
    /* Normal character state */
    .n {
      opacity: 0;
      color: var(--color-text-primary);
    }
    
    /* Fake character overlay for typewriter effect */
    .f {
      position: absolute;
      left: 0;
      top: 0;
      opacity: 0;
      color: var(--color-text-secondary);
      z-index: 1;
      background: var(--color-text-primary);
      display: none;
      transform-origin: left center;
    }
  }
  
  /* No animation state */
  &.nono {
    color: var(--color-text-primary);
  }
}

/* Inverted style variant */
.Awrite-inv,
.Atext-inv {
  color: var(--color-text-secondary);
  padding: 2px 4px 1px;
  background: var(--color-text-primary);
  .char .n,
  &.nono {
    color: var(--color-text-secondary);
  }
}

/* Text block animation */
.Atext {
  text-transform: uppercase;
  position: relative;
  line-height: 1.27;
  pointer-events: none;
  
  a {
    pointer-events: all;
  }
  
  p + p {
    margin-top: 1.8rem;
  }
  
  .char .f {
    background: transparent;
  }
  
  .iO {
    position: absolute;
    left: 0;
    width: 1px;
    top: 150%;
    height: 10px;
  }
  
  &.stview .iO {
    top: 0%;
    height: 100%;
  }
}

/* Line-by-line animation */
.Aline {
  text-transform: uppercase;
  position: relative;
  line-height: 1.27;
  pointer-events: none;
  opacity: 0;
  
  a {
    pointer-events: all;
  }
  
  p + p {
    margin-top: 1.8rem;
  }
  
  &.stview .iO {
    top: 0%;
    height: 100%;
  }
}

/* Animated title with canvas overlay */
.Atitle {
  position: relative;
  display: inline-flex;
  justify-content: flex-start;
  
  .cCover {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
  
  .Oi {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 1;
    opacity: 1 !important;
  }
  
  .tt1 {
    opacity: 0;
  }
  
  canvas {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
  }
}

/* Mouse cursor animation */
.mouse {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 49;
  pointer-events: none;
  
  &_el {
    position: absolute;
    left: 2rem;
    top: -0.8rem;
    overflow: hidden;
    
    .Awrite {
      white-space: nowrap;
      
      &-w {
        --color-text-primary: #f8f6f2;
        --color-text-secondary: #000;
      }
    }
  }
}

/* WebGL and interaction utilities */
.pHide {
  position: fixed;
  pointer-events: none;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
}

/* Development/debug helpers */
.iO,
.Oi,
.OiAlt {
  visibility: hidden;
  pointer-events: none;
}

html:not(.dev) {
  .iO,
  .Oi,
  .OiChange,
  .OiAlt {
    background: transparent !important;
  }
}

/* WebGL canvas containers */
#gl {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 20;
  pointer-events: none;
}

#glLoader {
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 32;
}

#glBg {
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 0;
}

/* Performance optimization */
.move {
  will-change: transform;
}

.canvas {
  pointer-events: none;
  position: fixed;
  left: 0;
  top: 0;
}

/* Debug/development utilities */
.checkfix {
  position: fixed;
  right: 0;
  bottom: 0;
  font-size: 12px;
  z-index: 1000;
  background: #333;
  color: #fff;
  font-family: Arial;
  padding: 12px;
  opacity: 0.1;
  
  &:hover {
    opacity: 1;
  }
}

/* Image lazy loading */
.imgP {
  opacity: 0;
  height: auto;
  transition: 0.6s opacity cubic-bezier(0.55, 0, 0.1, 1);
  
  &.Ldd {
    opacity: 1;
  }
}

/* WebGL media container */
.glMedia {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

/* Utility for fake sections (likely for scroll calculations) */
section.fake {
  height: 110vh;
}
```

### ./src/styles/background.css
```css
/* src/styles/background.css */

.Mbg {
  position: fixed;
  inset: 0;
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  opacity: 0.15;
  max-height: 100vh;
  pointer-events: none;
  transition: 2s max-height var(--ease-out-quart);
  padding: 0 var(--spacing-page);

  @media (--mobile) and (max-width: 745px) {
    padding: 0;
  }
}

.Mbg_col {
  flex-shrink: 0;
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  width: 1rem;

  @media (--mobile) and (max-width: 745px) {
    width: 0.5rem;
  }

  & > div {
    width: 100%;
    background: var(--color-border);
    flex-shrink: 0;
  }
}

.Mbg_col:nth-child(1) {
  & > div {
    background: var(--color-text-secondary);
  }
}

.Mbg_col:nth-child(2) {
  & > div {
    background: var(--color-accent);
  }
}

.Mbg_col:nth-child(3) {
  & > div {
    background: var(--color-text-primary);
  }
}

.Mbg_col:nth-child(4) {
  & > div {
    background: var(--color-text-tertiary);
  }
}

.Mbg_col:nth-child(5) {
  & > div {
    background: var(--color-border);
  }
}

.Mbg_col:nth-child(6) {
  & > div {
    background: var(--color-text-secondary);
  }
}

.Mbg_col:nth-child(7) {
  & > div {
    background: var(--color-accent);
  }
}

.Mbg_col:nth-child(8) {
  & > div {
    background: var(--color-text-primary);
  }
}

.Mbg_col:nth-child(9) {
  & > div {
    background: var(--color-text-tertiary);
  }
}

.Mbg_col:nth-child(10) {
  & > div {
    background: var(--color-border);
  }
}

.Mbg_col:nth-child(11) {
  & > div {
    background: var(--color-text-secondary);
  }
}

.Mbg_col:nth-child(12) {
  & > div {
    background: var(--color-accent);
  }
}

.Mbg_col_el {
  width: 1px;
  display: block;
  background: linear-gradient(to bottom, transparent 50%, #9c9c9c 50%);
  background-size: 100% 8px;
}

.Mbg_col:first-child {
  opacity: 0;
  visibility: hidden;
}

.Mbg_col:last-child {
  opacity: 0;
  visibility: hidden;
}
```

### ./src/styles/design-system.css
```css
/* src/styles/design-system.css */

:root {
  /* Colors */
  --color-bg-primary: #f8f6f2;
  --color-bg-secondary: #000;
  --color-text-primary: #000;
  --color-text-secondary: #f8f6f2;
  --color-text-muted: #8a8a8a;
  
  /* Spacing scale */
  --space-xs: 0.4rem;
  --space-sm: 0.8rem;
  --space-md: 1.2rem;
  --space-lg: 1.6rem;
  --space-xl: 2.4rem;
  --space-2xl: 3.2rem;
  --space-3xl: 4.8rem;
  --space-4xl: 6.4rem;
  --space-5xl: 8rem;
  --space-6xl: 9.6rem;
  --space-7xl: 12.8rem;
  
  /* Layout */
  --container-padding: clamp(1.6rem, 5vw, 8rem);
  --max-width: 1400px;
  
  /* Transitions */
  --transition-fast: 0.15s ease;
  --transition-base: 0.3s ease;
  --transition-slow: 0.6s cubic-bezier(0.55, 0, 0.1, 1);
  
  /* Border radius */
  --radius-sm: 0.2rem;
  --radius-md: 0.4rem;
  --radius-lg: 0.8rem;
  
  /* Shadows */
  --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);
}

/* Container utilities */
.container {
  max-width: var(--max-width);
  margin: 0 auto;
  padding-left: var(--container-padding);
  padding-right: var(--container-padding);
}

/* Responsive utilities */
.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}
```

### ./src/styles/error.css
```css
/* src/styles/error.css */

.error {
  position: relative;
}

.error_hero {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: relative;
  overflow: hidden;
  height: 100vh;

  @media (--mobile) {
    height: 100lvh;
  }

  & .cnt {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  & .cnt_tp {
    text-align: center;

    & .Atext {
      --dark: #8a8a8a;
    }
  }

  & .cnt_bp {
    text-align: center;
    width: 100%;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: 1.4rem;

    & .Atext {
      --dark: #8a8a8a;
    }
  }

  & .cnt_hold {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  & .cnt_tt {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    text-align: center;

    & .Atitle {
      margin-bottom: var(--spacing-md);
    }

    & .Atext {
      --dark: #8a8a8a;
      max-width: 60ch;
      margin: 0 auto;
    }
  }

  & .cnt_bt {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: var(--spacing-lg);

    & .Awrite {
      --dark: #8a8a8a;
      --light: var(--color-text-primary);
      text-decoration: underline;
      text-underline-offset: 0.2em;
      
      &:hover {
        --dark: var(--color-accent);
        --light: var(--color-accent);
      }
    }
  }
}

.error_404 {
  font-family: var(--font-primary);
  font-size: clamp(8rem, 15vw, 20rem);
  font-weight: 700;
  line-height: 0.9;
  letter-spacing: -0.02em;
  color: var(--color-text-primary);
  opacity: 0.1;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;
  pointer-events: none;
}

.error_content {
  position: relative;
  z-index: 1;
}
.error_hero .cnt_tt .Oiel:not(.act) {
  pointer-events: none;
}
```

### ./src/styles/footer.css
```css

/* src/styles/footer.css */
.footer {
  padding-bottom: 1.6rem;
  padding-top: 1.6rem;
  width: 100%;
  margin-top: 24rem;
  padding-bottom: 5.6rem;
  position: relative;
  overflow: hidden;
}
:root.D .footer_cm {
  width: 100%;
}
@media (orientation: landscape) {
  :root.T .footer_cm {
    width: 100%;
  }
}
@media (orientation: portrait) {
  :root.T .footer_cm {
    width: 100vw;
    margin: 0 auto;
  }
  :root.T .footer_cm.fix {
    width: 100vw;
  }
}
@media only screen and (max-width: 430px) {
  :root.T .footer_cm {
    width: 39rem;
  }
}
.footer_cm .Atitle {
  margin-left: var(--pgrid);
}
.footer_cm .Atitle .cCover {
  position: absolute;
}
:root.D .footer_cm .Atitle .cCover {
  left: -2rem;
  right: -2rem;
  top: -2rem;
  bottom: -2rem;
  pointer-events: none;
  transform: translateY(-2.2rem);
}
@media (orientation: landscape) {
  :root.T .footer_cm .Atitle .cCover {
    left: -2rem;
    right: -2rem;
    top: -2rem;
    bottom: -2rem;
    pointer-events: none;
    transform: translateY(-2.2rem);
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .footer_cm .Atitle .cCover {
    left: 0;
    right: 0;
    top: -1.5rem;
    bottom: -1.5rem;
    pointer-events: none;
    transform: translateY(-1.4rem);
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .footer_cm .Atitle .cCover {
    left: 0;
    right: 0;
    top: -1rem;
    bottom: -1rem;
    pointer-events: none;
    transform: translateY(-0.8rem);
  }
}
.footer_cm .Atitle .cCover canvas {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.footer_cm .Atitle .ttj {
  opacity: 0;
}
:root.D .footer_cm .Atitle .ttj {
  font-size: 27.7rem;
}
@media (orientation: landscape) {
  :root.T .footer_cm .Atitle .ttj {
    font-size: 27.7rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .footer_cm .Atitle .ttj {
    font-size: 14.8rem;
    white-space: nowrap;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .footer_cm .Atitle .ttj {
    font-size: 19vw;
    white-space: nowrap;
  }
}
@media only screen and (max-width: 430px) {
  :root.T .footer_cm .Atitle .ttj {
    font-size: 7.4rem;
  }
}
:root.AND .footer_cm .Atitle .ttj {
  opacity: 1;
}
:root.D .footer .cnt {
  margin-top: 8.5rem;
}
@media (orientation: landscape) {
  :root.T .footer .cnt {
    margin-top: 8.5rem;
  }
}
@media (orientation: portrait) {
  :root.T .footer .cnt {
    margin-top: 5.6rem;
  }
}
.footer .cnt_lk {
  display: flex;
  align-items: flex-start;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 0.4rem 1rem;
}
:root.D .footer .cnt_lk {
  margin-left: 70.9rem;
  width: 54.9rem;
}
@media (orientation: landscape) {
  :root.T .footer .cnt_lk {
    margin-left: 70.9rem;
    width: 54.9rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .footer .cnt_lk {
    margin-left: 30rem;
    width: 28.6rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .footer .cnt_lk {
    margin-left: 9.4rem;
    width: 18.4rem;
  }
}
.footer .cnt_lk_el {
  width: calc(50% - 0.5rem);
}
.footer .cnt_lk .Awrite {
  --dark: #8a8a8a;
  --light: #000;
}
.footer .cnt_lk .Awrite .iO {
  width: 1px;
}
.footer .cnt_lk .Awrite i {
  width: 0.8rem;
  margin-left: 0.4rem;
  display: inline-flex;
  transition: 0.3s opacity cubic-bezier(0.55, 0, 0.1, 1);
}
.footer .cnt_lk .Awrite i svg {
  width: 100%;
}
.footer .cnt_lk .Awrite i svg path {
  fill: #000;
}
.footer .cnt_lk .Awrite:not(.ivi) i {
  opacity: 0;
}
:root.D .footer .cnt_cr {
  margin-left: 70.9rem;
  width: 54.9rem;
  margin-top: 3.2rem;
}
@media (orientation: landscape) {
  :root.T .footer .cnt_cr {
    margin-left: 70.9rem;
    width: 54.9rem;
    margin-top: 3.2rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .footer .cnt_cr {
    margin-top: 4rem;
    margin-left: 30rem;
    width: 28.7rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .footer .cnt_cr {
    margin-top: 4rem;
    margin-left: 9.4rem;
    width: 20.7rem;
  }
}
.footer .cnt_cr_el {
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
}
.footer .cnt_cr_el + .cnt_cr_el {
  margin-top: min(2px, 0.2rem);
}
.footer .cnt_cr .Awrite:first-child {
  --dark: #8a8a8a;
  --light: #000;
}
:root.D .footer .cnt_cp {
  margin-left: 70.9rem;
  width: 54.9rem;
  margin-top: 3.2rem;
}
@media (orientation: landscape) {
  :root.T .footer .cnt_cp {
    margin-left: 70.9rem;
    width: 54.9rem;
    margin-top: 3.2rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .footer .cnt_cp {
    margin-top: 4rem;
    margin-left: 30rem;
    width: 100%;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .footer .cnt_cp {
    margin-top: 4rem;
    margin-left: 9.4rem;
    width: 100%;
  }
}
.footer .cnt_cp .Awrite {
  --dark: #8a8a8a;
}
.footer .Awrite.nono:not(.stview.inview) {
  opacity: 0;
  transition: 0.4s opacity cubic-bezier(0.55, 0, 0.1, 1);
}
```

### ./src/styles/home.css
```css
/* src/styles/home.css */

.home {
  position: relative;
  
  &-hero {
    height: 100vh;
    height: 100svh;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    flex-direction: column;
    position: relative;
    overflow: hidden;
    padding-bottom: var(--space-7xl);
    
    @media (min-aspect-ratio: 18/9) {
      padding-bottom: 10vh;
    }
    
    &__content {
      display: flex;
      justify-content: flex-start;
      align-items: flex-start;
      flex-direction: column;
      padding-left: var(--container-padding);
      padding-top: var(--space-5xl);
      
      @media (min-width: 768px) {
        padding-left: calc(var(--container-padding) * 2);
        padding-top: var(--space-6xl);
      }
    }
    
    &__title {
      opacity: 0;
      animation: fadeInUp 1s ease-out 0.5s forwards;
    }
    
    &__subtitle {
      margin-top: var(--space-xl);
      opacity: 0;
      animation: fadeInUp 1s ease-out 0.8s forwards;
    }
  }
  
  &-projects {
    margin-top: var(--space-7xl);
    
    @media (min-width: 768px) {
      margin-top: calc(var(--space-7xl) * 2);
    }
  }
  
  &-about {
    position: relative;
    padding-top: 40vh;
    
    @media (orientation: portrait) {
      padding-top: 20vh;
    }
  }
}

/* Animations */
@keyframes fadeInUp {
}
```

### ./src/styles/loader.css
```css
/* src/styles/loader.css */

.loader {
  position: fixed;
  z-index: 100;
  inset: 0;
  transform-origin: left top;
  overflow: hidden;
  pointer-events: none;
  background: #000;
}

.loader_bg {
  background: #000;
  position: absolute;
  inset: 0;
}

.loader_bp {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  z-index: 110;
  
  .animated-text-container {
    color: #f8f6f2;
    font-family: 'montrealbook', monospace;
    font-size: max(11px, 1.1rem);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    line-height: 1.4;
    
    .char {
      display: inline-block;
      position: relative;
      
      .n {
        display: inline-block;
        color: #f8f6f2;
      }
      
      .f {
        position: absolute;
        top: 0;
        left: 0;
        display: inline-block;
        background: #f8f6f2;
        color: #000;
        width: 100%;
      }
    }
  }
}

.loader_cnt {
  height: 100vh;
  color: #f8f6f2;
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  align-items: flex-start;
  position: relative;
  padding: 0.8rem var(--spacing-page) 4rem;

  @media (--mobile) {
    max-height: 100lvh;
  }
}

.loader_top {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  width: 100%;
  line-height: 1.27;
}

.loader_top_left {
  display: flex;
  justify-content: flex-start;
  align-items: center;

  & .Awrite {
    --dark: #8a8a8a;
    --light: #f8f6f2;
  }
}

.loader_top_right {
  display: flex;
  justify-content: flex-end;
  align-items: center;

  & .Awrite {
    --dark: #8a8a8a;
    --light: #f8f6f2;
  }
}

.loader_bottom {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  width: 100%;
  line-height: 1.27;
}

.loader_bottom_left {
  display: flex;
  justify-content: flex-start;
  align-items: flex-end;

  & .Awrite {
    --dark: #8a8a8a;
    --light: #f8f6f2;
  }
}

.loader_bottom_right {
  display: flex;
  justify-content: flex-end;
  align-items: flex-end;

  & .Awrite {
    --dark: #8a8a8a;
    --light: #f8f6f2;
  }
}

.loader_progress {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: rgba(255, 255, 255, 0.1);
  overflow: hidden;

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0%;
    height: 100%;
    background: var(--color-accent);
    transition: width 0.3s ease;
  }
}

.loader_progress[data-progress]::after {
  width: attr(data-progress);
}

.loader_tp {
  font-family: var(--font-primary);
  font-variant-numeric: tabular-nums lining-nums;
  font-kerning: none;
  font-size: clamp(16.7rem, 12vw, 28rem);
  letter-spacing: -0.02em;
  margin-left: clamp(3.7rem, 8vw, 59.2rem);

  @media (--mobile) and (max-width: 745px) {
    font-size: 16.7rem;
    margin-left: 3.7rem;
  }
}

.loader_bp {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  margin-left: clamp(4.5rem, 8vw, 59.2rem);
  width: min(29rem, 100%);

  @media (--mobile) and (max-width: 745px) {
    margin-left: 4.5rem;
    width: 29rem;
  }

  & .Awrite {
    --light: #000;
    --dark: #f8f6f2;

    & + .Awrite {
      margin-top: 0.2rem;
    }
  }
}
```

### ./src/styles/loader.pcss
```css
```

### ./src/styles/navigation.css
```css
/* src/styles/navigation.css */

.nav {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 50;
  --nav-gray: #8a8a8a;
}

.nav_blur {
  position: absolute;
  z-index: 5;
  left: 0;
  top: 0;
  width: 100%;
  height: 280%;
  transform-origin: left top;
  pointer-events: none;
  transition:
    1s transform var(--ease-out-quart),
    1s height var(--ease-out-quart);
  transform: translateZ(0) translateY(-30%);

  @media (--tablet) {
    height: 280%;
  }

  @media (--mobile) {
    height: 280%;
  }

  & > div,
  &::before,
  &::after {
    position: absolute;
    inset: 0;
  }

  & > div:nth-of-type(1) {
    z-index: 2;
    -webkit-backdrop-filter: blur(1px);
    backdrop-filter: blur(1px);
    -webkit-mask: linear-gradient(
      to top,
      rgba(255, 255, 255, 0) 0%,
      rgb(255, 255, 255) 12.5%,
      rgb(255, 255, 255) 37.5%,
      rgba(255, 255, 255, 0) 50%
    );
    mask: linear-gradient(
      to top,
      rgba(255, 255, 255, 0) 0%,
      rgb(255, 255, 255) 12.5%,
      rgb(255, 255, 255) 37.5%,
      rgba(255, 255, 255, 0) 50%
    );
  }

  & > div:nth-of-type(2) {
    z-index: 3;
    -webkit-backdrop-filter: blur(2px);
    backdrop-filter: blur(2px);
    -webkit-mask: linear-gradient(
      to top,
      rgba(255, 255, 255, 0) 12.5%,
      rgb(255, 255, 255) 37.5%,
      rgb(255, 255, 255) 50%,
      rgba(255, 255, 255, 0) 62.5%
    );
    mask: linear-gradient(
      to top,
      rgba(255, 255, 255, 0) 12.5%,
      rgb(255, 255, 255) 37.5%,
      rgb(255, 255, 255) 50%,
      rgba(255, 255, 255, 0) 62.5%
    );
  }

  & > div:nth-of-type(3) {
    z-index: 4;
    -webkit-backdrop-filter: blur(4px);
    backdrop-filter: blur(4px);
    -webkit-mask: linear-gradient(
      to top,
      rgba(255, 255, 255, 0) 37.5%,
      rgb(255, 255, 255) 50%,
      rgb(255, 255, 255) 62.5%,
      rgba(255, 255, 255, 0) 75%
    );
    mask: linear-gradient(
      to top,
      rgba(255, 255, 255, 0) 37.5%,
      rgb(255, 255, 255) 50%,
      rgb(255, 255, 255) 62.5%,
      rgba(255, 255, 255, 0) 75%
    );

    @media (--mobile) {
      -webkit-backdrop-filter: blur(5px);
      backdrop-filter: blur(5px);
    }
  }

  & > div:nth-of-type(4) {
    z-index: 5;
    -webkit-backdrop-filter: blur(8px);
    backdrop-filter: blur(8px);
    -webkit-mask: linear-gradient(
      to top,
      rgba(255, 255, 255, 0) 50%,
      rgb(255, 255, 255) 62.5%,
      rgb(255, 255, 255) 75%,
      rgba(255, 255, 255, 0) 87.5%
    );
    mask: linear-gradient(
      to top,
      rgba(255, 255, 255, 0) 50%,
      rgb(255, 255, 255) 62.5%,
      rgb(255, 255, 255) 75%,
      rgba(255, 255, 255, 0) 87.5%
    );

    @media (--mobile) {
      -webkit-backdrop-filter: blur(6px);
      backdrop-filter: blur(6px);
    }
  }
}

.nav_top {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 54;
  pointer-events: none;
  line-height: 1.27;
  padding: var(--spacing-md) var(--spacing-page);

  @media (--mobile) {
    padding: var(--spacing-sm) var(--spacing-page);
    align-items: flex-start;
  }
}

.nav_left {
  display: flex;
  justify-content: flex-start;
  align-items: center;

  @media (--mobile) and (max-width: 745px) {
    width: 8.8rem;
    flex-wrap: wrap;
  }

  & .Awrite {
    --dark: var(--nav-gray);
  }
}

.nav_logo {
  display: flex;
  pointer-events: all;
  opacity: 0;
}

.nav_clock {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  white-space: nowrap;
}

.nav_clock_p {
  margin-right: 0.6rem;
}

.nav_clock_s {
  opacity: 0;
  color: var(--nav-gray);
}

.nav_clock_a {
  margin-left: 0.6rem;
}
.nav_right {
  display: flex;
  justify-content: flex-end;
  align-items: center;

  @media (--mobile) and (max-width: 745px) {
    justify-content: space-between;
    align-items: flex-start;
    width: 23.3rem;
  }

  & a {
    opacity: 0;
    margin-left: var(--spacing-md);

    @media (--mobile) and (max-width: 745px) {
      margin-left: 0;
    }

    &.act {
      pointer-events: all;
    }

    &.inac {
      pointer-events: none !important;
      opacity: 0.5 !important;
    }

    &:not(.act) {
      pointer-events: all;
    }
  }
}

.nav_right_ops {
  @media (--mobile) and (max-width: 745px) {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;

    & a + a {
      margin-top: 2px;
    }
  }
}

.nav .colorChg {
  width: 24px;
  height: 12px;
  display: block;
  position: relative;
  background: #000;
  border-radius: 2px;
  margin-bottom: 0.5%;

  &::before {
    content: '';
    border-radius: 2px;
    background: #f8f6f2;
    width: 10px;
    height: 10px;
    position: absolute;
    left: 1px;
    top: 1px;
    display: block;
  }
}

.nav_burger {
  position: relative;
  width: 3.7rem;
  height: 10px;
  justify-content: center;
  align-items: center;
  display: none;

  @media (--mobile) {
    display: flex;
  }
}

.nav_burger_i {
  width: 3.7rem;
  height: 10px;
  position: relative;

  & span {
    position: absolute;
    width: 100%;
    left: 0;
    height: 1px;

    &::before {
      content: '';
      width: 100%;
      height: 100%;
      position: absolute;
      left: 0;
      bottom: 0;
      background: var(--color-accent);
      transition: 0.6s transform var(--ease-out-quart);
    }

    &:first-child {
      top: 0;
      transition:
        0.6s left var(--ease-out-quart),
        0.6s top var(--ease-out-quart),
        0.6s transform var(--ease-out-quart);

      &::after {
        content: '';
        width: 100%;
        height: 100%;
        position: absolute;
        left: 0;
        top: 0;
        background: #e63642;
        transform: scaleX(0);
        transform-origin: center center;
        transition: 0.6s transform var(--ease-out-quart);
      }
    }

    &:last-child {
      top: 100%;
      transform: translateY(-100%) rotate(0);
      transition:
        0.6s left var(--ease-out-quart),
        0.6s top var(--ease-out-quart),
        0.6s transform var(--ease-out-quart);

      &::after {
        content: '';
        width: 100%;
        height: 100%;
        position: absolute;
        left: 0;
        top: 0;
        background: #e63642;
        transform: scaleX(0);
        transform-origin: center center;
        transition: 0.6s transform var(--ease-out-quart);
      }
    }
  }
}
.nav_menu {
  position: absolute;
  right: 0;
  display: flex;
  justify-content: flex-end;
  top: 50%;
  transform: translateY(-50%);

  @media (--mobile) {
    left: 0;
    top: 0;
    bottom: 0;
    opacity: 0;
    transition: 0.6s opacity var(--ease-out-quart);
    background: #eceae4;
    color: #000;
    overflow-y: scroll;
    padding-bottom: 32rem;
    padding-top: 15rem;
  }
}

.nav_menu_t {
  @media (--mobile) {
    position: absolute;
    left: var(--spacing-page);
    bottom: 1.6rem;
  }
}

.nav_menu_ops {
  @media (--mobile) {
    padding: 0 1.3rem;
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    flex-direction: column;

    & .simp {
      font-size: 4.2rem;
      line-height: 1.1;
      position: relative;
      padding-bottom: 0.4rem;

      &::before {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        background: #000;
        transform-origin: left center;
        height: 1px;
        transform: scaleX(0);
        transition: 0.6s transform var(--ease-out-quart);
      }

      &.actLink::before {
        transform: scaleX(1);
      }
    }
  }

  @media (--desktop) {
    display: flex;
    justify-content: flex-end;
    color: #888;

    & .ops_el {
      position: relative;
      overflow: hidden;
      transition: 0.6s color var(--ease-out-quart);

      & .char {
        position: relative;
      }

      & .rel {
        position: relative;
        white-space: nowrap;
      }

      & .ghost {
        top: 50%;
        left: 0;
        position: absolute;
        white-space: nowrap;

        & .char {
          opacity: 0;
        }
      }

      &:hover {
        color: var(--color-accent);
      }
    }
  }
}

.nav_menu_links {
  @media (--mobile) {
    font-family: var(--font-mono);
    text-transform: uppercase;
    font-size: 1.3rem;
    padding: 0 1.3rem;
    margin-top: 4rem;

    & .t {
      color: #888;
    }

    & a {
      margin-top: 1.6rem;
      position: relative;

      & svg {
        width: 100%;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        left: -1rem;
      }
    }
  }
}

.nav_menu_redes {
  @media (--mobile) {
    margin-top: 3rem;
    padding: 0 1.3rem;

    & .t {
      font-family: var(--font-mono);
      text-transform: uppercase;
      font-size: 1.3rem;
      color: #888;
    }

    & ul {
      margin-top: 1rem;

      & li {
        font-size: 1.6rem;
        line-height: 1.25;
      }
    }
  }
}

.nav_menu_bg {
  @media (--mobile) {
    right: var(--spacing-page);
    width: calc(100vw - 1rem);
    overflow: clip;
    position: absolute;
    aspect-ratio: 1/1;
    bottom: 1.6rem;
  }
}

/* Menu states */
.nav_menu:not(.act-menu) {
  @media (--mobile) {
    pointer-events: none !important;

    & * {
      pointer-events: none !important;
    }
  }
}

.nav_menu.act-menu {
  @media (--mobile) {
    opacity: 1;
    pointer-events: all;
  }
}

/* Burger menu animation states */
.act-menu .nav_burger {
  & span:first-child {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(25deg);

    &::before {
      transform: scaleX(0);
      transition: 0.6s transform 0.4s var(--ease-out-quart);
    }

    &::after {
      transform: scaleX(1);
      transition: 0.6s transform 0.6s var(--ease-out-quart);
    }
  }

  & span:nth-child(2)::before {
    transform: translateY(-50%) scaleX(0);
    transition: 0.6s transform var(--ease-out-quart);
  }

  & span:last-child {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(-25deg);

    &::before {
      transform: scaleX(0);
      transition: 0.6s transform 0.4s var(--ease-out-quart);
    }

    &::after {
      transform: scaleX(1);
      transition: 0.6s transform 0.6s var(--ease-out-quart);
    }
  }
}
```

### ./src/styles/playground.css
```css
/* src/styles/playground.css */

.glPlay {
  position: fixed;
  left: 0;
  top: 0;
  pointer-events: none;
}
.playground {
  position: relative;
  z-index: 4;
}
.playground.noclick .playground_intro * {
  pointer-events: none !important;
}
.playground_intro {
  padding-top: 12rem;
}
.playground_intro .cnt {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex-direction: column;
}
.playground_intro .cnt_t .Oiel:not(.act) {
  pointer-events: none;
}
:root.D .playground_intro .cnt_t .Atitle .cCover {
  left: -2rem;
  right: -2rem;
  top: -2rem;
  bottom: -2rem;
  pointer-events: none;
  transform: translate(-0.1rem);
}
@media (orientation: landscape) {
  :root.T .playground_intro .cnt_t .Atitle .cCover {
    left: -2rem;
    right: -2rem;
    top: -2rem;
    bottom: -2rem;
    pointer-events: none;
    transform: translate(-0.1rem);
  }
}
.playground_intro .cnt_t .Atitle .ttj {
  opacity: 0;
}
:root.T .playground_intro .cnt_t .Atitle .ttj {
  touch-action: none;
}
@media (orientation: portrait) {
  :root.T .playground_intro .cnt_t .Atitle .ttj {
    font-size: 7.6rem;
    line-height: 1;
  }
}
:root.AND .playground_intro .cnt_t .Atitle .ttj {
  opacity: 1;
}
.playground_intro .cnt_x {
  align-self: flex-start;
  position: relative;
}
:root.D .playground_intro .cnt_x {
  margin-left: 59.2rem;
  max-width: 34.5rem;
  margin-top: 5.6rem;
}
@media (orientation: landscape) {
  :root.T .playground_intro .cnt_x {
    margin-left: 59.2rem;
    max-width: 34.5rem;
    margin-top: 5.6rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .playground_intro .cnt_x {
    margin-left: 23rem;
    max-width: 28.4rem;
    margin-top: 7.6rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .playground_intro .cnt_x {
    margin-left: 9.5rem;
    max-width: 24.4rem;
    width: 100%;
    margin-top: 5.2rem;
  }
  :root.T .playground_intro .cnt_x br {
    display: none;
  }
}
.playground_intro .cnt_g {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: flex-start;
  position: relative;
}
:root.D .playground_intro .cnt_g {
  gap: 2.4rem 0;
  width: 100%;
  max-width: 140.8rem;
  padding-left: 1rem;
  padding-right: 1rem;
  margin: 8rem auto 0;
}
@media (orientation: landscape) {
  :root.T .playground_intro .cnt_g {
    gap: 2.4rem 0;
    width: 100%;
    max-width: 140.8rem;
    padding-left: 1rem;
    padding-right: 1rem;
    margin: 8rem auto 0;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .playground_intro .cnt_g {
    flex-direction: column;
    width: 100%;
    padding-right: var(--pgrid);
    padding-left: var(--pgrid);
    margin: 8rem auto 0;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .playground_intro .cnt_g {
    flex-direction: column;
    width: 100%;
    padding-right: var(--pgrid);
    padding-left: var(--pgrid);
    margin: 4rem auto 0;
  }
}
.playground_intro .cnt_g .Sizer {
  position: absolute;
  left: 0;
  top: 0;
  aspect-ratio: 228/171;
  pointer-events: none;
}
:root.D .playground_intro .cnt_g .Sizer {
  width: 22.3rem;
}
@media (orientation: landscape) {
  :root.T .playground_intro .cnt_g .Sizer {
    width: 22.3rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .playground_intro .cnt_g .Sizer {
    width: 43.7rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .playground_intro .cnt_g .Sizer {
    width: 28.8rem;
  }
}
.playground_intro .cnt_g .Oi-pg {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.playground_intro .cnt_g_el {
  position: relative;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-direction: column;
  text-align: left;
  padding-bottom: 2.4rem;
  --scx: 1;
  --scy: 1;
  pointer-events: none;
}
:root.D .playground_intro .cnt_g_el {
  width: 22.3rem;
  margin-bottom: calc(16.725rem * (var(--scy) - 1));
}
@media (orientation: landscape) {
  :root.T .playground_intro .cnt_g_el {
    width: 22.3rem;
    margin-bottom: calc(16.725rem * (var(--scy) - 1));
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .playground_intro .cnt_g_el {
    width: 43.7rem;
    margin-bottom: calc(35rem * (var(--scy) - 1));
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .playground_intro .cnt_g_el {
    width: 28.8rem;
    margin-bottom: calc(26rem * (var(--scy) - 1));
  }
}
:root.NOGL .playground_intro .cnt_g_el {
  transition: 1s width cubic-bezier(0.55, 0, 0.1, 1);
  padding-bottom: 10.2rem;
}
.playground_intro .cnt_g_el:before {
  content: "";
  position: absolute;
  transition:
    1s opacity cubic-bezier(0.55, 0, 0.1, 1),
    0.1ms visibility 1s linear;
}
:root.D .playground_intro .cnt_g_el:before {
  top: -2rem;
  right: -2rem;
  bottom: -2rem;
  left: -2rem;
  -webkit-backdrop-filter: blur(3px);
  backdrop-filter: blur(3px);
}
@media (orientation: portrait) {
  :root.T .playground_intro .cnt_g_el:before {
    top: -1rem;
    right: -1rem;
    bottom: -1rem;
    left: -1rem;
    -webkit-backdrop-filter: blur(3px);
    backdrop-filter: blur(3px);
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .playground_intro .cnt_g_el:before {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    -webkit-backdrop-filter: blur(3px);
    backdrop-filter: blur(3px);
  }
}
:root.NOGL .playground_intro .cnt_g_el:before {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-backdrop-filter: blur(3px);
  backdrop-filter: blur(3px);
  display: none;
}
.playground_intro .cnt_g_el.ldd.act:before {
  opacity: 0;
  visibility: hidden;
}
.playground_intro .cnt_g_el .el_md {
  pointer-events: all;
  aspect-ratio: 228/171;
  position: relative;
  margin-top: 0.8rem;
  width: 100%;
}
.playground_intro .cnt_g_el .el_md .cv {
  transform: scale(var(--scx), var(--scy));
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  aspect-ratio: 228/171;
  transform-origin: left top;
  z-index: 3;
}
.playground_intro .cnt_g_el .el_md img,
.playground_intro .cnt_g_el .el_md video {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  opacity: 0;
  visibility: hidden;
}
:root.NOGL .playground_intro .cnt_g_el .el_md img,
:root.NOGL .playground_intro .cnt_g_el .el_md video {
  visibility: visible;
  opacity: 0;
  filter: blur(4px);
  transition:
    0.6s opacity cubic-bezier(0.55, 0, 0.1, 1),
    0.6s filter cubic-bezier(0.55, 0, 0.1, 1);
}
.playground_intro .cnt_g_el .el_md .Oi-pgel {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.playground_intro .cnt_g_el .el_b {
  width: 100%;
  position: absolute;
  top: max(11px, 1.1rem);
  margin-top: 1.6rem;
  left: 0;
}
:root.D .playground_intro .cnt_g_el .el_b {
  transform: translateY(calc(16.725rem * var(--scy)));
}
@media (orientation: landscape) {
  :root.T .playground_intro .cnt_g_el .el_b {
    transform: translateY(calc(16.725rem * var(--scy)));
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .playground_intro .cnt_g_el .el_b {
    transform: translateY(calc(33.4rem * var(--scy)));
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .playground_intro .cnt_g_el .el_b {
    transform: translateY(calc(21.8rem * var(--scy)));
  }
}
:root.NOGL .playground_intro .cnt_g_el .el_b {
  bottom: 1.2rem;
  top: auto;
  transform: translateY(-6.4rem);
}
.playground_intro .cnt_g_el .el_b .Awrite {
  padding-top: 0.8rem;
  transform: translateY(100%);
  text-transform: uppercase;
}
:root.NOGL .playground_intro .cnt_g_el .el_t .iO {
  top: 0;
  height: 50vh;
}
:root.NOGL .playground_intro .cnt_g_el .el_t.stview + .el_md img:not(.Ldd) {
  opacity: 0;
  filter: blur(4px);
}
:root.NOGL .playground_intro .cnt_g_el .el_t.stview + .el_md video:not(.Ldd) {
  opacity: 0;
  filter: blur(4px);
}
:root.NOGL .playground_intro .cnt_g_el .el_t.stview + .el_md img.Ldd {
  opacity: 1;
  filter: blur(0);
}
:root.NOGL .playground_intro .cnt_g_el .el_t.stview + .el_md video.Ldd {
  opacity: 1;
  filter: blur(0);
}
:root.NOGL .playground_intro .cnt_g_el.wact {
  width: 100%;
}
@media (orientation: portrait) {
  :root.T .playground_intro .cnt_g_el:nth-child(odd) {
    margin-left: auto;
  }
}
:root.D .playground_intro .cnt_g_el.el-1 {
  margin-left: 24.3rem;
}
:root.D .playground_intro .cnt_g_el.el-2 {
  margin-left: 1rem;
}
:root.D .playground_intro .cnt_g_el.el-3 {
  margin-left: 24.3rem;
}
:root.D .playground_intro .cnt_g_el.el-4 {
  margin-left: 23.3rem;
}
:root.D .playground_intro .cnt_g_el.el-5 {
  margin-left: 1rem;
}
:root.D .playground_intro .cnt_g_el.el-6 {
  margin-left: 24.3rem;
  margin-right: 23rem;
}
:root.D .playground_intro .cnt_g_el.el-8 {
  margin-left: 47.6rem;
}
:root.D .playground_intro .cnt_g_el.el-9 {
  margin-left: 24.3rem;
}
:root.D .playground_intro .cnt_g_el.el-10 {
  margin-left: 23.3rem;
}
:root.D .playground_intro .cnt_g_el.el-11 {
  margin-left: 47.6rem;
  margin-right: 23rem;
}
@media (orientation: landscape) {
  :root.T .playground_intro .cnt_g_el.el-1 {
    margin-left: 24.3rem;
  }
  :root.T .playground_intro .cnt_g_el.el-2 {
    margin-left: 1rem;
  }
  :root.T .playground_intro .cnt_g_el.el-3 {
    margin-left: 24.3rem;
  }
  :root.T .playground_intro .cnt_g_el.el-4 {
    margin-left: 23.3rem;
  }
  :root.T .playground_intro .cnt_g_el.el-5 {
    margin-left: 1rem;
  }
  :root.T .playground_intro .cnt_g_el.el-6 {
    margin-left: 24.3rem;
    margin-right: 23rem;
  }
  :root.T .playground_intro .cnt_g_el.el-8 {
    margin-left: 47.6rem;
  }
  :root.T .playground_intro .cnt_g_el.el-9 {
    margin-left: 24.3rem;
  }
  :root.T .playground_intro .cnt_g_el.el-10 {
    margin-left: 23.3rem;
  }
  :root.T .playground_intro .cnt_g_el.el-11 {
    margin-left: 47.6rem;
    margin-right: 23rem;
  }
}
.playground_intro .cnt_bt {
  position: relative;
  width: 100%;
}
:root.D .playground_intro .cnt_bt {
  margin-left: 59.2rem;
  max-width: 34.5rem;
  margin-top: 17.6rem;
}
@media (orientation: landscape) {
  :root.T .playground_intro .cnt_bt {
    margin-left: 59.2rem;
    max-width: 34.5rem;
    margin-top: 17.6rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .playground_intro .cnt_bt {
    margin-left: 23rem;
    max-width: 28.4rem;
    margin-top: 12.6rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .playground_intro .cnt_bt {
    margin-left: 9.5rem;
    max-width: 24.4rem;
    width: 100%;
    margin-top: 10rem;
  }
  :root.T .playground_intro .cnt_bt br {
    display: none;
  }
}
.playground_intro .cnt_bt .iO {
  position: absolute;
  top: 4rem;
}
.playground_intro .cnt_bt h3 {
  transition:
    0.8s opacity 1s cubic-bezier(0.55, 0, 0.1, 1),
    0.6s transform cubic-bezier(0.55, 0, 0.1, 1);
  transform-origin: left center;
  line-height: 1.19;
}
@media (orientation: portrait) {
  :root.T .playground_intro .cnt_bt h3 {
    font-size: 1.4rem;
  }
}
.playground_intro .cnt_bt:not(.stview) h3 {
  opacity: 0;
  transform: scaleX(1.2);
  transition: 0.8s all cubic-bezier(0.55, 0, 0.1, 1);
}
@media (orientation: portrait) {
  :root.T .playground_intro .cnt_bt:not(.stview) h3 {
    transform: scaleX(1);
  }
}```

### ./src/styles/project.css
```css
/* src/styles/project.css */

.project .backto {
  position: absolute;
  left: 0;
  width: 100%;
  z-index: 57;
  pointer-events: none;
}
:root.D .project .backto {
  top: 8rem;
}
@media (orientation: landscape) {
  :root.T .project .backto {
    top: 8rem;
  }
}
@media (orientation: portrait) {
  :root.T .project .backto {
    top: 12rem;
  }
}
.project .backto .Awrite {
  white-space: nowrap;
  pointer-events: all;
  --dark: #8a8a8a;
  --light: #000;
}
:root.D .project .backto .Awrite {
  margin-left: 59rem;
}
@media (orientation: landscape) {
  :root.T .project .backto .Awrite {
    margin-left: 59rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .project .backto .Awrite {
    margin-left: 8.2rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .project .backto .Awrite {
    margin-left: 9.3rem;
  }
}
.project_intro {
  padding-top: 35vh;
  position: relative;
}
.project_intro .iO.iO-outin {
  height: 20vh;
  top: 0;
  left: 0;
  width: 10px;
  background: yellow;
  position: absolute;
}
.project_intro .cnt {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
}
.project_intro .cnt_n {
  flex-shrink: 0;
}
:root.D .project_intro .cnt_n {
  width: 59rem;
}
@media (orientation: landscape) {
  :root.T .project_intro .cnt_n {
    width: 59rem;
  }
}
@media (orientation: portrait) {
  :root.T .project_intro .cnt_n {
    width: 4.3rem;
  }
}
:root.D .project_intro .cnt_mn {
  width: 34.6rem;
}
@media (orientation: landscape) {
  :root.T .project_intro .cnt_mn {
    width: 34.6rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .project_intro .cnt_mn {
    width: 34.6rem;
    margin-left: 4rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .project_intro .cnt_mn {
    width: 27.2rem;
    margin-left: 5rem;
  }
}
.project_intro .cnt .tt3 {
  opacity: 0;
  transform: scaleX(1.2);
  transition:
    0.6s opacity cubic-bezier(0.55, 0, 0.1, 1),
    0.7s transform 0.1s cubic-bezier(0.55, 0, 0.1, 1);
  transform-origin: left center;
}
.project_intro .cnt .tt3.stview {
  opacity: 1;
  transform: scaleX(1);
  transition:
    0.8s opacity 0.1s cubic-bezier(0.55, 0, 0.1, 1),
    0.6s transform cubic-bezier(0.55, 0, 0.1, 1);
}
.project_intro .cnt .tt3.notran {
  opacity: 1;
  transform: scaleX(1);
  transition: none;
}
:root.D .project_intro .cnt_x {
  margin-top: 10rem;
}
@media (orientation: landscape) {
  :root.T .project_intro .cnt_x {
    margin-top: 10rem;
  }
}
@media (orientation: portrait) {
  :root.T .project_intro .cnt_x {
    margin-top: 8rem;
  }
}
.project_intro .cnt_cr {
  margin-top: 4rem;
}
.project_intro .cnt_cr_el {
  width: 100%;
}
.project_intro .cnt_cr_el + .cnt_cr_el {
  margin-top: min(2px, 0.2rem);
}
.project_intro .cnt_cr .Awrite {
  display: inline;
  line-height: 1.27;
}
.project_intro .cnt_cr .Awrite:first-child {
  --dark: #8a8a8a;
  --light: #f8f6f2;
}
.project_intro .cnt_cr .Awrite .word {
  white-space: nowrap;
}
.project_intro .cnt_l {
  margin-top: 4rem;
}
.project_intro .cnt_l .Awrite {
  --dark: #8a8a8a;
  --light: #000;
}
.project_intro .cnt_l .Awrite .iO {
  width: 1px;
}
.project_intro .cnt_l .Awrite i {
  width: 0.8rem;
  margin-left: 0.4rem;
  display: inline-flex;
}
.project_intro .cnt_l .Awrite i svg {
  width: 100%;
}
.project_intro .cnt_l .Awrite i svg path {
  fill: #000;
}
:root.D .project_els .cnt {
  margin-top: 30rem;
}
@media (orientation: landscape) {
  :root.T .project_els .cnt {
    margin-top: 30rem;
  }
}
@media (orientation: portrait) {
  :root.T .project_els .cnt {
    margin-top: 20rem;
  }
}
.project_els .cnt_els {
  display: flex;
  justify-content: flex-start;
  align-items: flex-end;
  flex-direction: column;
}
.project_els .cnt_el {
  position: relative;
}
:root.D .project_els .cnt_el {
  width: 105rem;
}
@media (orientation: landscape) {
  :root.T .project_els .cnt_el {
    width: 105rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .project_els .cnt_el {
    width: 58.2rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .project_els .cnt_el {
    width: 100%;
  }
}
.project_els .cnt_el .iO {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
}
.project_els .cnt_el img,
.project_els .cnt_el video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  left: 0;
  top: 0;
  transition:
    0.6s opacity cubic-bezier(0.55, 0, 0.1, 1),
    1s filter cubic-bezier(0.55, 0, 0.1, 1);
}
.project_els .cnt_el img:not(.Ldd),
.project_els .cnt_el video:not(.Ldd) {
  opacity: 0;
  filter: blur(10px);
}
.project_els .cnt_el img:not(.Ldd) ~ .iO,
.project_els .cnt_el video:not(.Ldd) ~ .iO {
  top: 6rem;
}
.project_els .cnt_el img:not(.Ldd) + button,
.project_els .cnt_el video:not(.Ldd) + button {
  pointer-events: none;
  opacity: 0;
}
.project_els .cnt_el button {
  position: absolute;
  right: 1rem;
  top: 1rem;
  height: 16px;
  width: 64px;
  transition: 0.6s opacity 0.4s cubic-bezier(0.55, 0, 0.1, 1);
  --light: #000;
  --dark: #f8f6f2;
  --dark: #8a8a8a;
  mix-blend-mode: screen;
}
.project_els .cnt_el button .Awrite {
  white-space: nowrap;
}
.project_els .cnt_el button .on,
.project_els .cnt_el button .off {
  position: absolute;
  right: 0;
  top: 0;
}
:root.D .project_els .cnt_el + .cnt_el {
  margin-top: 1rem;
}
@media (orientation: landscape) {
  :root.T .project_els .cnt_el + .cnt_el {
    margin-top: 1rem;
  }
}
@media (orientation: portrait) {
  :root.T .project_els .cnt_el + .cnt_el {
    margin-top: 0.8rem;
  }
}
.project_nxt {
  height: 100vh;
  padding-top: 35vh;
  position: relative;
}
.project_nxt .iO-nxt {
  position: absolute;
  right: 0;
  top: 0;
  height: 50vh;
  width: 10px;
  background: blue;
}
.project_nxt .top {
  position: absolute;
  left: 0;
  top: 4rem;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  --dark: #8a8a8a;
}
:root.D .project_nxt .top_sc {
  width: 34.6rem;
  margin-left: 59rem;
}
@media (orientation: landscape) {
  :root.T .project_nxt .top_sc {
    width: 34.6rem;
    margin-left: 59rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .project_nxt .top_sc {
    margin-left: 8.2rem;
    width: 13rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .project_nxt .top_sc {
    margin-left: 9.5rem;
    width: 13rem;
  }
}
.project_nxt .top_sc .Awrite {
  white-space: nowrap;
}
.project_nxt .cnt {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
}
.project_nxt .cnt_n {
  flex-shrink: 0;
}
:root.D .project_nxt .cnt_n {
  width: 59rem;
}
@media (orientation: landscape) {
  :root.T .project_nxt .cnt_n {
    width: 59rem;
  }
}
@media (orientation: portrait) {
  :root.T .project_nxt .cnt_n {
    width: 4.3rem;
  }
}
:root.D .project_nxt .cnt_mn {
  width: 34.6rem;
}
@media (orientation: landscape) {
  :root.T .project_nxt .cnt_mn {
    width: 34.6rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .project_nxt .cnt_mn {
    width: 34.6rem;
    margin-left: 4rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .project_nxt .cnt_mn {
    width: 27.2rem;
    margin-left: 5rem;
  }
}```

### ./src/styles/projects.css
```css
/* src/styles/projects.css */

.projects_intro {
  padding-top: calc(50vh - 17rem);
  position: relative;
}
.projects_intro .Size {
  top: 0;
  left: 0;
  height: 35vh;
  position: absolute;
  width: 1px;
}
.projects_intro .cnt_tp {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}
.projects_intro .cnt_t {
  display: flex;
  justify-content: flex-start;
  align-items: flex-end;
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_intro .cnt_t {
    margin-left: 8.5rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_intro .cnt_t {
    margin-left: 9.3rem;
  }
}
.projects_intro .cnt_t_comp {
  display: flex;
  transform: translateY(-0.1rem);
}
.projects_intro .cnt_t_comp .Atitle + .Atitle {
  margin-left: 2rem;
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_t_comp .Atitle + .Atitle {
    margin-left: 1.2rem;
  }
}
.projects_intro .cnt_t .Atitle {
  pointer-events: none !important;
}
:root.AND .projects_intro .cnt_t .Atitle .tt1 {
  opacity: 1;
}
.projects_intro .cnt_t .Atitle .Oi {
  top: 16rem;
  height: 10px;
}
:root.D .projects_intro .cnt_t .Atitle .cCover {
  left: -2rem;
  right: -2rem;
  top: -2rem;
  bottom: -2rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_t .Atitle .cCover {
    left: -2rem;
    right: -2rem;
    top: -2rem;
    bottom: -2rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_intro .cnt_t .Atitle .cCover {
    left: -0.2rem;
    right: -0.2rem;
    top: -1rem;
    bottom: -1rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_intro .cnt_t .Atitle .cCover {
    left: 0;
    right: 0;
    top: -1rem;
    bottom: -1rem;
  }
}
.projects_intro .cnt_t .Awrite {
  --dark: rgba(0, 0, 0, 0.5);
}
:root.D .projects_intro .cnt_t .Awrite {
  margin-bottom: 1rem;
  margin-left: 1.6rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_t .Awrite {
    margin-bottom: 1rem;
    margin-left: 1.6rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_t .Awrite {
    margin-bottom: 0.6rem;
    margin-left: 0.8rem;
  }
}
.projects_intro .cnt_t .Awrite .iO {
  height: 10px;
  width: 10px;
}
:root.D .projects_intro .cnt_t .Awrite .iO {
  top: 9.1rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_t .Awrite .iO {
    top: 9.1rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_t .Awrite .iO {
    top: 4rem;
  }
}
.projects_intro .cnt_ctr {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  width: 24rem;
  padding-left: 0.6rem;
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_ctr {
    display: none;
  }
}
.projects_intro .cnt_ctr .iO {
  top: 16rem;
  height: 10px;
}
.projects_intro .cnt_ctr h3 {
  --dark: #8a8a8a;
}
.projects_intro .cnt_ctr button {
  margin: 0 0.4rem 0 0.8rem;
}
.projects_intro .cnt_ctr button + button {
  margin: 0 0.4rem;
}
.projects_intro .cnt_ctr button i {
  flex-shrink: 0;
  margin-left: 0.4rem;
  width: 0.8rem;
  height: 0.8rem;
  border: 1px solid #8a8a8a;
  display: inline-block;
  position: relative;
}
.projects_intro .cnt_ctr button i:before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: scaleX(0);
  background: #000;
  transform-origin: right center;
  transition: 0.6s transform cubic-bezier(0.55, 0, 0.1, 1);
}
.projects_intro .cnt_ctr button.act {
  pointer-events: none;
}
.projects_intro .cnt_ctr button.act i:before {
  transform: scaleX(1);
  transform-origin: left center;
  transition: 0.6s transform 0.6s cubic-bezier(0.55, 0, 0.1, 1);
}
.projects_intro .cnt_els {
  position: relative;
}
:root.D .projects_intro .cnt_els {
  padding-bottom: 20rem;
  margin-top: 11.6rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_els {
    padding-bottom: 20rem;
    margin-top: 11.6rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_els {
    padding-bottom: 10rem;
    margin-top: 5.6rem;
  }
}
.projects_intro .cnt_els_sld {
  position: absolute;
  left: 0;
  top: calc(-50vh + 17.4rem);
  right: 50%;
  z-index: 5;
  pointer-events: none;
  bottom: -3rem;
}
.projects_intro .cnt_els_sld .Oi {
  position: absolute;
  left: 0;
  top: calc(50vh - 17.4rem);
  width: 10px;
}
.projects_intro .cnt_els_sld .Oi .elh {
  width: 10px;
  height: 100vh;
}
.projects_intro .cnt_els_sld .Oi .elh:last-child {
  display: none;
}
.projects_intro .cnt_els .stck_hold {
  position: sticky;
  height: 100vh;
  top: 0;
  left: var(--pgrid);
  width: 46.4rem;
}
.projects_intro .cnt_els .stck_hold .single {
  aspect-ratio: 464/348;
  width: 100%;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 0;
}
.projects_intro .cnt_els .stck_hold .single img,
.projects_intro .cnt_els .stck_hold .single video {
  display: none;
}
.projects_intro .cnt_els .stck_hold .cRoll {
  aspect-ratio: 464/348;
  width: 100%;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 0;
}
.projects_intro .cnt_els .stck_hold canvas {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  transition:
    0.4s opacity cubic-bezier(0.55, 0, 0.1, 1),
    0.6s filter 0.2s cubic-bezier(0.55, 0, 0.1, 1);
}
.projects_intro .cnt_els .stck_hold canvas.hideme {
  opacity: 0;
  filter: blur(6px);
  transition:
    0.4s opacity cubic-bezier(0.55, 0, 0.1, 1),
    0.6s filter 0.2s cubic-bezier(0.55, 0, 0.1, 1);
}
.projects_intro .cnt_el {
  position: relative;
  transition: 0.6s margin-top cubic-bezier(0.55, 0, 0.1, 1);
}
.projects_intro .cnt_el:after {
  content: "";
  width: 1px;
  height: 21.4rem;
  display: block;
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_intro .cnt_el:after {
    height: 30vw;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_intro .cnt_el:after {
    height: 55.93vw;
  }
}
.projects_intro .cnt_el > .iO {
  position: absolute;
  left: 0;
  top: 11rem;
  width: 10px;
  height: 10px;
}
.projects_intro .cnt_el .Oi {
  position: absolute;
  left: 50%;
  transform: translate(-50%);
  width: 100vw;
  height: 34.8rem;
  bottom: 0;
  z-index: 12;
  background: red;
  opacity: 0.1;
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_intro .cnt_el .Oi {
    height: 30vw;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_intro .cnt_el .Oi {
    height: 55.93vw;
  }
}
.projects_intro .cnt_el .sldGuide {
  opacity: 0.1;
  position: absolute;
  bottom: 0;
  height: 34.8rem;
  left: calc(-1 * var(--pgrid));
  right: calc(-1 * var(--pgrid));
}
.projects_intro .cnt_el + .cnt_el {
  margin-top: 50vh;
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_intro .cnt_el + .cnt_el {
    margin-top: 30vh;
  }
}
.projects_intro .cnt_el + .cnt_el .Oiwatch {
  background: blue;
  left: 30px;
}
.projects_intro .cnt_el_nfo {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
}
:root.D .projects_intro .cnt_el_nfo {
  padding-bottom: 18.4rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_el_nfo {
    padding-bottom: 18.4rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_el_nfo {
    padding-bottom: 6.6rem;
    flex-wrap: wrap;
  }
}
.projects_intro .cnt_el_nfo .nfo_n {
  flex-shrink: 0;
}
:root.D .projects_intro .cnt_el_nfo .nfo_n {
  width: 23.6rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_el_nfo .nfo_n {
    width: 23.6rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_el_nfo .nfo_n {
    width: 3.5rem;
  }
}
.projects_intro .cnt_el_nfo .nfo_t {
  flex-shrink: 0;
}
:root.D .projects_intro .cnt_el_nfo .nfo_t {
  width: 34.6rem;
  padding-left: 1rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_el_nfo .nfo_t {
    width: 34.6rem;
    padding-left: 1rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_el_nfo .nfo_t {
    width: 27.2rem;
    position: relative;
    overflow-x: clip;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_intro .cnt_el_nfo .nfo_t {
    margin-left: 4rem;
    padding-left: 0.8rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_intro .cnt_el_nfo .nfo_t {
    margin-left: 5rem;
    padding-left: 0.8rem;
  }
}
.projects_intro .cnt_el_nfo .nfo_x {
  flex-shrink: 0;
}
:root.D .projects_intro .cnt_el_nfo .nfo_x {
  width: 34.6rem;
  padding-left: 1rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_el_nfo .nfo_x {
    width: 34.6rem;
    padding-left: 1rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_el_nfo .nfo_x {
    margin-top: 2.4rem;
    width: 100%;
  }
  :root.T .projects_intro .cnt_el_nfo .nfo_x .linkXS {
    display: block;
    margin-top: 2.4rem;
    color: #8a8a8a;
    opacity: 0;
    text-transform: uppercase;
    line-height: 1.27;
    transition: 0.6s opacity 0.6s cubic-bezier(0.55, 0, 0.1, 1);
  }
  :root.T .projects_intro .cnt_el_nfo .nfo_x .Aline.stview + .linkXS {
    opacity: 1;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_intro .cnt_el_nfo .nfo_x {
    padding-left: 8.5rem;
  }
  :root.T .projects_intro .cnt_el_nfo .nfo_x .Aline {
    max-width: 34.6rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_intro .cnt_el_nfo .nfo_x {
    padding-left: 9.4rem;
  }
}
.projects_intro .cnt_el_nfo .nfo_l {
  width: 100%;
}
:root.D .projects_intro .cnt_el_nfo .nfo_l {
  padding-left: 1rem;
  margin-left: 24rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_el_nfo .nfo_l {
    padding-left: 1rem;
    margin-left: 24rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_intro .cnt_el_nfo .nfo_l {
    position: absolute;
    left: 0;
    bottom: 0;
    padding-left: 8.2rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_intro .cnt_el_nfo .nfo_l {
    position: absolute;
    left: 0;
    bottom: 0;
    padding-left: 9.4rem;
  }
}
.projects_intro .cnt_el_nfo .nfo_l .Awrite {
  --dark: #8a8a8a;
  --light: #000;
}
.projects_intro .cnt_el_nfo .nfo_l .Awrite .iO {
  width: 1px;
}
:root.D .projects_intro .cnt_el_nfo .nfo_l .Awrite .iO {
  top: 11rem;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_el_nfo .nfo_l .Awrite .iO {
    top: 11rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_intro .cnt_el_nfo .nfo_l .Awrite .iO {
    top: 0;
  }
}
.projects_intro .cnt_el_nfo .nfo_l .Awrite i {
  width: 0.8rem;
  margin-left: 0.4rem;
  display: inline-flex !important;
  overflow: hidden;
  position: relative;
  transition: 0.3s opacity cubic-bezier(0.55, 0, 0.1, 1);
}
.projects_intro .cnt_el_nfo .nfo_l .Awrite i svg {
  width: 100%;
}
.projects_intro .cnt_el_nfo .nfo_l .Awrite i svg path {
  fill: #000;
}
.projects_intro .cnt_el_nfo .nfo_l .Awrite:not(.ivi) i {
  opacity: 0;
}
.projects_intro .cnt_el_sld {
  width: 100%;
  height: 34.8rem;
  margin-top: 4rem;
  display: block;
  position: absolute;
  left: 0;
}
:root.D .projects_intro .cnt_el_sld {
  bottom: 0;
}
@media (orientation: landscape) {
  :root.T .projects_intro .cnt_el_sld {
    bottom: 0;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_intro .cnt_el_sld {
    height: 30vw;
    bottom: 3.5rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_intro .cnt_el_sld {
    height: 55.93vw;
    bottom: 3.5rem;
  }
}
:root.AND .projects_intro .cnt_el_sld {
  overflow-x: scroll;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.projects_intro .cnt_el_sld .cCover {
  height: 100%;
  position: relative;
  width: 100%;
}
.projects_intro .cnt_el_sld canvas {
  position: absolute;
  left: 50%;
  transform: translate(-50%);
  transition:
    0.4s opacity 0.2s cubic-bezier(0.55, 0, 0.1, 1),
    0.6s filter cubic-bezier(0.55, 0, 0.1, 1);
}
.projects_intro .cnt_el_sld canvas.hideme {
  opacity: 0;
  filter: blur(6px);
}
.projects_intro .cnt_el_sld canvas.fCanvas {
  opacity: 0;
  filter: blur(6px);
}
.projects_intro .cnt_el_sld img,
.projects_intro .cnt_el_sld video {
  display: none;
}
:root.AND .projects_intro .cnt_el_sld img,
:root.AND .projects_intro .cnt_el_sld video {
  display: block;
  width: 75vw;
  height: 55.93vw;
  object-fit: cover;
}
:root.AND .projects_intro .cnt_el_sld img + img,
:root.AND .projects_intro .cnt_el_sld img + video,
:root.AND .projects_intro .cnt_el_sld video + img,
:root.AND .projects_intro .cnt_el_sld video + video {
  margin-left: 0.8rem;
}
.projects_intro .cnt_el .tt3 {
  transition:
    0.8s opacity 0.1s cubic-bezier(0.55, 0, 0.1, 1),
    0.6s transform cubic-bezier(0.55, 0, 0.1, 1);
  transform-origin: left center;
}
.projects_intro .cnt_el:not(.stview) .tt3 {
  transition: 0.6s all cubic-bezier(0.55, 0, 0.1, 1);
  opacity: 0;
  transform: scaleX(1.2);
}
.projects_intro .cnt_el:not(.stview) .linkXS {
  opacity: 0 !important;
  transition: 0.6s opacity cubic-bezier(0.55, 0, 0.1, 1) !important;
}
.projects_intro .cnt_el.noOut .tt3 {
  opacity: 1 !important;
  transform: scaleX(1) !important;
}
.projects_intro .cnt_el.noOut .linkXS {
  opacity: 0 !important;
  transition: 0.6s opacity cubic-bezier(0.55, 0, 0.1, 1) !important;
}
.projects_intro .cnt_el-singlemod {
  margin-top: 0 !important;
  padding-bottom: 17rem;
}
.projects_intro .cnt_el-singlemod .cnt_el_nfo {
  position: sticky;
  top: calc(50vh - 17rem);
}
.projects_intro .cnt_el-singlemod .Oi {
  height: 50vh;
}
.projects_intro .cnt_el-singlemod:last-child {
  height: auto !important;
}
.projects_intro .cnt_el-singlemod:last-child .cnt_el_sld {
  position: static;
}
.projects_intro .cnt_el-singlemod:last-child .Oi {
  transform: translate(-50%);
  top: 50vh;
}
.projects_intro .cnt_el-singlemod .cnt_el_sld {
  pointer-events: none !important;
}
.faketit {
  position: fixed;
  left: 0;
  top: 35vh;
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
}
.faketit .nfo_n {
  flex-shrink: 0;
}
:root.D .faketit .nfo_n {
  width: 23.6rem;
}
@media (orientation: landscape) {
  :root.T .faketit .nfo_n {
    width: 23.6rem;
  }
}
@media (orientation: portrait) {
  :root.T .faketit .nfo_n {
    width: 3.5rem;
  }
}
.faketit .nfo_t {
  flex-shrink: 0;
}
:root.D .faketit .nfo_t {
  width: 34.6rem;
  padding-left: 1rem;
}
@media (orientation: landscape) {
  :root.T .faketit .nfo_t {
    width: 34.6rem;
    padding-left: 1rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .faketit .nfo_t {
    padding-left: 0.8rem;
    width: 34.6rem;
    margin-left: 4rem;
    position: relative;
    overflow-x: clip;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .faketit .nfo_t {
    width: 27.2rem;
    padding-left: 0.8rem;
    margin-left: 5rem;
    position: relative;
    overflow-x: clip;
  }
}
@media (orientation: portrait) {
  :root.T .projects_arc + .footer {
    margin-top: 10rem;
  }
}
.projects_arc .cnt_t {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
}
:root.D .projects_arc .cnt_t {
  margin-left: 59rem;
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_t {
    margin-left: 59rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_arc .cnt_t {
    margin-left: 8.5rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_arc .cnt_t {
    margin-left: 9.3rem;
  }
}
.projects_arc .cnt_t .Atitle {
  pointer-events: none !important;
}
:root.AND .projects_arc .cnt_t .Atitle .tt1 {
  opacity: 1;
}
:root.D .projects_arc .cnt_t .Atitle .Oi {
  top: 16rem;
  height: 10px;
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_t .Atitle .Oi {
    top: 16rem;
    height: 10px;
  }
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_t .Atitle .Oi {
    top: 16rem;
    height: 10px;
  }
}
:root.D .projects_arc .cnt_t .Atitle .cCover {
  left: -2rem;
  right: -2rem;
  top: -2rem;
  bottom: -2rem;
  transform: translate(-0.2rem);
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_t .Atitle .cCover {
    left: -2rem;
    right: -2rem;
    top: -2rem;
    bottom: -2rem;
    transform: translate(-0.2rem);
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_arc .cnt_t .Atitle .cCover {
    left: -0.2rem;
    right: -0.2rem;
    top: -1rem;
    bottom: -1rem;
    transform: translate(-0.1rem, -0.1rem);
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_arc .cnt_t .Atitle .cCover {
    left: 0;
    right: 0;
    top: -1rem;
    bottom: -1rem;
    transform: translate(-0.1rem, -0.1rem);
  }
}
.projects_arc .cnt_b {
  margin-top: 8rem;
}
.projects_arc .cnt_arc {
  position: relative;
  display: block;
  pointer-events: none;
}
.projects_arc .cnt_arc > .iO {
  position: absolute;
  left: 0;
  top: 100%;
  width: 10px;
  height: 10px;
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_arc > .iO {
    top: 50%;
  }
}
.projects_arc .cnt_arc + .cnt_arc {
  margin-top: 8.4rem;
}
.projects_arc .cnt_arc_nfo {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_arc_nfo {
    flex-wrap: wrap;
  }
}
.projects_arc .cnt_arc_nfo .nfo_n {
  flex-shrink: 0;
  opacity: 0;
  transition: 0.6s opacity cubic-bezier(0.55, 0, 0.1, 1);
}
:root.D .projects_arc .cnt_arc_nfo .nfo_n {
  width: 23.6rem;
  transform: translate(47.4rem);
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_n {
    width: 23.6rem;
    transform: translate(47.4rem);
  }
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_n {
    width: 3.5rem;
  }
}
.projects_arc .cnt_arc_nfo .nfo_t {
  flex-shrink: 0;
  opacity: 0;
  transition: 0.6s opacity cubic-bezier(0.55, 0, 0.1, 1);
}
.projects_arc .cnt_arc_nfo .nfo_t .tt3 {
  opacity: 0;
  transform: scaleX(1.2);
  transition:
    0.8s opacity 0.1s cubic-bezier(0.55, 0, 0.1, 1),
    0.6s transform cubic-bezier(0.55, 0, 0.1, 1);
  transform-origin: left center;
}
:root.D .projects_arc .cnt_arc_nfo .nfo_t {
  width: 34.6rem;
  padding-left: 1rem;
  transform: translate(34.6rem);
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_t {
    width: 34.6rem;
    padding-left: 1rem;
    transform: translate(34.6rem);
  }
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_t {
    width: 27.2rem;
    position: relative;
    overflow-x: clip;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_t {
    margin-left: 4rem;
    padding-left: 0.8rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_t {
    margin-left: 5rem;
    padding-left: 0.8rem;
  }
}
.projects_arc .cnt_arc_nfo .nfo_x {
  flex-shrink: 0;
  opacity: 0;
  transition: 0.6s opacity cubic-bezier(0.55, 0, 0.1, 1);
}
:root.D .projects_arc .cnt_arc_nfo .nfo_x {
  width: 34.6rem;
  padding-left: 1rem;
  padding-top: 3.2rem;
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_x {
    width: 34.6rem;
    padding-left: 1rem;
    padding-top: 3.2rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_x {
    margin-top: 2.4rem;
    width: 100%;
  }
  :root.T .projects_arc .cnt_arc_nfo .nfo_x .linkXS {
    display: block;
    margin-top: 2.4rem;
    color: #8a8a8a;
    opacity: 0;
    text-transform: uppercase;
    line-height: 1.27;
    transition: 0.6s opacity 0.6s cubic-bezier(0.55, 0, 0.1, 1);
  }
  :root.T .projects_arc .cnt_arc_nfo .nfo_x .Aline.stview + .linkXS {
    opacity: 1;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_x {
    padding-left: 8.5rem;
  }
  :root.T .projects_arc .cnt_arc_nfo .nfo_x .Aline {
    max-width: 34.6rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_x {
    padding-left: 9.4rem;
  }
}
.projects_arc .cnt_arc_nfo .nfo_x .iO {
  top: 0%;
  height: 100%;
}
:root.D .projects_arc .cnt_arc_nfo .nfo_sld {
  width: 100%;
  padding-left: 1rem;
  display: flex;
  justify-content: flex-end;
  align-items: flex-start;
  gap: 1rem;
  overflow-x: clip;
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_sld {
    width: 100%;
    padding-left: 1rem;
    display: flex;
    justify-content: flex-end;
    align-items: flex-start;
    gap: 1rem;
    overflow-x: clip;
  }
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_sld {
    margin-top: 2.4rem;
    width: 28rem;
  }
}
@media (orientation: portrait) and (min-width: 744px) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_sld {
    padding-left: 8.6rem;
  }
}
@media (orientation: portrait) and (max-width: 745px) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_sld {
    padding-left: 9.4rem;
  }
}
.projects_arc .cnt_arc_nfo .nfo_sld .md {
  position: relative;
  width: 100%;
}
:root.D .projects_arc .cnt_arc_nfo .nfo_sld .md {
  max-width: 11rem;
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_sld .md {
    max-width: 11rem;
  }
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_sld .md {
    display: none;
  }
  :root.T .projects_arc .cnt_arc_nfo .nfo_sld .md:first-child {
    display: block;
  }
}
.projects_arc .cnt_arc_nfo .nfo_sld .md .iO {
  position: absolute;
  left: 0;
  bottom: 50%;
  z-index: 5;
  background: blue;
  width: 10px;
  height: 10px;
}
:root.D .projects_arc .cnt_arc_nfo .nfo_sld .md .iO {
  display: none;
}
.projects_arc .cnt_arc_nfo .nfo_sld .md_h {
  position: relative;
  width: 100%;
}
:root.D .projects_arc .cnt_arc_nfo .nfo_sld .md_h {
  aspect-ratio: 110/83;
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_sld .md_h {
    aspect-ratio: 110/83;
  }
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_arc_nfo .nfo_sld .md_h {
    aspect-ratio: 184/139;
  }
}
.projects_arc .cnt_arc_nfo .nfo_sld .md_h img,
.projects_arc .cnt_arc_nfo .nfo_sld .md_h video {
  position: absolute;
  left: 0%;
  top: 0%;
  width: 100%;
  height: 100%;
  object-fit: cover;
  will-change: transform, filter, opacity;
  transition:
    0.6s filter cubic-bezier(0.55, 0, 0.1, 1),
    0.6s opacity cubic-bezier(0.55, 0, 0.1, 1),
    0s transform 0.6s cubic-bezier(0.55, 0, 0.1, 1);
  opacity: 0;
  filter: blur(4px);
}
:root.D .projects_arc .cnt_arc_nfo .nfo_sld .md_h img,
:root.D .projects_arc .cnt_arc_nfo .nfo_sld .md_h video {
  transform: translate(2.4rem);
}
:root.T .projects_arc .cnt_arc_nfo .nfo_sld .md_h img,
:root.T .projects_arc .cnt_arc_nfo .nfo_sld .md_h video {
  transform: translateY(1.2rem);
}
:root.T .projects_arc .cnt_arc_nfo .nfo_sld .md_h img.Ldd,
:root.T .projects_arc .cnt_arc_nfo .nfo_sld .md_h video.Ldd {
  transition:
    1.2s filter cubic-bezier(0.55, 0, 0.1, 1),
    0.6s opacity cubic-bezier(0.55, 0, 0.1, 1),
    0.6s transform cubic-bezier(0.55, 0, 0.1, 1);
  opacity: 1;
  transform: translate(0);
  filter: blur(0);
}
.projects_arc .cnt_arc:not(.stview) .linkXS {
  opacity: 0 !important;
  transition: 0.6s opacity cubic-bezier(0.55, 0, 0.1, 1) !important;
}
.projects_arc .cnt_arc.stview .nfo_n,
.projects_arc .cnt_arc.stview .nfo_t {
  opacity: 1;
}
.projects_arc .cnt_arc.stview .nfo_t .tt3 {
  opacity: 1;
  transform: scaleX(1);
}
.projects_arc .cnt_arc.stview .nfo_x {
  opacity: 1;
  pointer-events: all;
}
.projects_arc .cnt_arc.stview .nfo_sld {
  pointer-events: all;
}
.projects_arc .cnt_arc.noOut .nfo_n,
.projects_arc .cnt_arc.noOut .nfo_t {
  opacity: 1 !important;
}
.projects_arc .cnt_arc.noOut .nfo_t .tt3 {
  opacity: 1 !important;
  transform: scaleX(1) !important;
}
.projects_arc .cnt_arc.noOut .nfo .linkXS {
  opacity: 0 !important;
  transition: 0.6s opacity cubic-bezier(0.55, 0, 0.1, 1) !important;
}
@media (orientation: portrait) {
  :root.T .projects_arc .cnt_arc.noOut .nfo .md img,
  :root.T .projects_arc .cnt_arc.noOut .nfo .md video {
    opacity: 0 !important;
    filter: blur(4px) !important;
  }
}
.projects_arc .cnt_arc:hover .nfo_n,
.projects_arc .cnt_arc:hover .nfo_t,
.projects_arc .cnt_arc:hover .nfo_x {
  opacity: 0.5;
}
:root.D .projects_arc .cnt_arc:hover .nfo_sld .iO {
  display: block;
}
:root.D .projects_arc .cnt_arc:hover .nfo_sld .Ldd {
  opacity: 1;
  transform: translate(0);
  filter: blur(0);
  transition:
    1.2s filter cubic-bezier(0.55, 0, 0.1, 1),
    0.6s opacity cubic-bezier(0.55, 0, 0.1, 1),
    0.6s transform cubic-bezier(0.55, 0, 0.1, 1);
}
@media (orientation: landscape) {
  :root.T .projects_arc .cnt_arc:hover .nfo_sld .iO {
    display: block;
  }
  :root.T .projects_arc .cnt_arc:hover .nfo_sld .Ldd {
    opacity: 1;
    transform: translate(0);
    filter: blur(0);
    transition:
      1.2s filter cubic-bezier(0.55, 0, 0.1, 1),
      0.6s opacity cubic-bezier(0.55, 0, 0.1, 1),
      0.6s transform cubic-bezier(0.55, 0, 0.1, 1);
  }
}```

### ./src/styles/reset.css
```css
/* src/styles/reset.css */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margins and padding */
* {
  margin: 0;
  padding: 0;
}

/* HTML and body setup */
html {
  font-size: 16px;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;
  overscroll-behavior: none;
}

body {
  margin: 0;
  line-height: 1;
  font-family: system-ui, sans-serif;
  overscroll-behavior: none;
}

/* Remove list styles */
ul, ol {
  list-style: none;
}

/* Make images and videos responsive */
img, video {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
  border: 0;
}

/* SVG adjustments */
svg {
  max-width: 100%;
  
  &:not(:root) {
    overflow: hidden;
  }
  
  & title {
    font-size: 0;
  }
}

/* Remove outline on focus */
:focus {
  outline: none;
}

::-moz-focus-inner {
  border: 0;
}

/* Link styles */
a {
  background-color: transparent;
  color: inherit;
  text-decoration: none;
  outline: none;
  
  &:active,
  &:hover {
    outline: 0;
  }
}

/* Button styles */
button {
  background: none;
  border: none;
  font: inherit;
  cursor: pointer;
  color: inherit;
  outline: none;
  pointer-events: auto;
  
  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }
}

/* Form elements */
input,
textarea {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  border: none;
  border-radius: 0;
  outline: none;
  pointer-events: auto;
  font: inherit;
  color: inherit;
}

input {
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  
  &[type="number"] {
    -moz-appearance: textfield;
  }
}

/* Headings */
h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
  margin: 0;
}

/* Paragraphs */
p {
  margin: 0;
}

/* Tables */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td, th {
  padding: 0;
}

/* Hidden elements */
[hidden],
template {
  display: none;
}

/* CSS Custom Properties */
html {
  --dark: #000;
  --light: #f8f6f2;
  --bg: #f8f6f2;
}

/* Screen reader only text */
.scr_read {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
  word-break: normal;
}

/* Rotate device warning for mobile */
.rotatedev {
  z-index: 500;
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  background: #000;
  justify-content: center;
  align-items: center;
  text-align: center;
  color: #fff;
  display: none;
  
  @media (min-aspect-ratio: 1/1) {
    .touch & {
      display: flex;
    }
  }
}

/* Lenis smooth scrolling */
html {
  &.lenis {
    height: auto;
    -ms-overflow-style: none;
    scrollbar-width: none;
    
    &::-webkit-scrollbar {
      display: none;
    }
  }
}

.lenis {
  &.lenis-smooth {
    scroll-behavior: auto;
    
    & [data-lenis-prevent] {
      overscroll-behavior: contain;
    }
  }
  
  &.lenis-stopped {
    overflow: hidden;
  }
  
  &.lenis-scrolling iframe {
    pointer-events: none;
  }
}

/* Mobile touch handling */
html.touch body main {
  position: relative;
  overflow: clip;
}
```

### ./src/styles/typography.css
```css
/* src/styles/typography.css */

@font-face {
  font-family: 'montreal';
  src: url('/fonts/PPNeueMontreal-Medium.woff2') format('woff2');
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'montrealbook';
  src: url('/fonts/PPNeueMontrealMono-Book.woff2') format('woff2');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

/* Modern typography classes for Next.js */
.hero-title {
  font-family: 'montreal', sans-serif;
  font-size: clamp(3.8rem, 8vw, 8rem);
  letter-spacing: -0.024em;
  line-height: 0.9;
  font-weight: 500;
}

.section-title {
  font-family: 'montreal', sans-serif;
  font-size: clamp(2.4rem, 5vw, 4.8rem);
  letter-spacing: -0.016em;
  line-height: 1.1;
  font-weight: 500;
}

.body-text {
  font-family: 'montrealbook', sans-serif;
  font-size: clamp(1.4rem, 2vw, 1.6rem);
  letter-spacing: 0;
  line-height: 1.4;
  font-weight: 400;
}

.project-title {
  font-family: 'montreal', sans-serif;
  font-size: clamp(1.6rem, 3vw, 1.8rem);
  letter-spacing: -0.01em;
  line-height: 1.2;
  font-weight: 500;
  text-transform: uppercase;
}

/* Base body styles */
body {
  font-family: 'montrealbook', sans-serif;
  color: #000;
  background: #f8f6f2;
  font-weight: 400;
  line-height: 1;
  font-variant-numeric: slashed-zero;
  font-size: clamp(14px, 1.6vw, 18px);
}

/* Text utilities */
.text-light {
  color: #f8f6f2;
}

.text-dark {
  color: #000;
}

.text-gray {
  color: #8a8a8a;
}

.text-uppercase {
  text-transform: uppercase;
}
```

### ./src/webgl/AboutWebGL.tsx
```typescript
// src/webgl/AboutWebGL.tsx 
```

### ./src/webgl/BackgroundWebGL.tsx
```typescript
// src/webgl/BackgroundWebGL.tsx 
'use client'

import { useFrame, useThree } from '@react-three/fiber'
import { useRef, useEffect, useState } from 'react'
import { Mesh, ShaderMaterial, Vector2 } from 'three'
import { power2InOut } from '@/lib/easings'

const vertexShader = `
varying vec2 vUv;
void main() {
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`

const fragmentShader = `
precision highp float;
uniform float uTime;
uniform vec2 uResolution;
varying vec2 vUv;

void main() {
  vec2 uv = gl_FragCoord.xy / uResolution.xy;
  float progress = fract(uTime * 0.5);
  vec3 color = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), progress);
  gl_FragColor = vec4(color, 1.0);
}
`

export function BackgroundWebGL({ startTime = 2.6 }: { startTime?: number }) {
  const meshRef = useRef<Mesh>(null)
  const { gl, size } = useThree()
  const [isActive, setIsActive] = useState(false)
  const uniforms = useRef({
    uTime: { value: 0.0 },
    uResolution: { value: new Vector2(size.width, size.height) },
  })

  useEffect(() => {
    const timer = setTimeout(() => setIsActive(true), startTime * 1000)
    uniforms.current.uResolution.value.set(size.width, size.height)
    gl.setSize(size.width, size.height)
    return () => clearTimeout(timer)
  }, [gl, size, startTime])

  useFrame((state) => {
    if (meshRef.current && isActive) {
      const material = meshRef.current.material as ShaderMaterial
      material.uniforms.uTime.value = state.clock.getElapsedTime() - startTime
    }
  })

  if (!isActive) return null

  return (
    <mesh ref={meshRef}>
      <planeGeometry args={[2, 2]} />
      <shaderMaterial
        vertexShader={vertexShader}
        fragmentShader={fragmentShader}
        uniforms={uniforms.current}
      />
    </mesh>
  )
}
```

### ./src/webgl/Canvas.tsx
```typescript
// src/webgl/Canvas.tsx 
'use client'

import { Canvas } from '@react-three/fiber'
import { Suspense } from 'react'

export function WebGLProvider({ children }: { children: React.ReactNode }) {
  return (
    <Suspense fallback={null}>
      <Canvas
        gl={{ antialias: true }}
        camera={{ fov: 45, position: [0, 0, 7] }}
      >
        {children}
      </Canvas>
    </Suspense>
  )
}
```

### ./src/webgl/FooterWebGL.tsx
```typescript
// src/webgl/FooterWebGL.tsx 
'use client'

import { useFrame, useThree } from '@react-three/fiber'
import { useRef, useEffect, useMemo, useState } from 'react'
import { Text, useTexture } from '@react-three/drei'
import { Mesh, ShaderMaterial, Vector2 } from 'three'
import { power4InOut } from '@/lib/easings'

const vertexShader = `
attribute vec2 uv;
attribute vec3 position;
attribute float id;
attribute vec3 index;
uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;
uniform float uTime;
uniform vec2 uMouse;
uniform float uPower;
uniform float uCols;
uniform int uLength;
varying vec2 vUv;
varying vec2 vUvR;
varying vec3 vPos;
varying vec3 vIndex;
varying float vId;

void main() {
  vUv = uv;
  vUvR = vec2(gl_VertexID << 1 & 2, gl_VertexID & 2);
  vPos = position;
  vId = id;
  vIndex = index;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`

const fragmentShader = `
precision highp float;
uniform sampler2D tMap;
uniform float uTime;
uniform vec2 uScreen;
uniform vec2 uMouse;
uniform float uPower;
uniform float uCols;
uniform float uColor;
uniform float uStart;
uniform float uKey;
uniform float uPowers[32];
varying vec2 vUv;
varying vec2 vUvR;
varying vec3 vPos;
varying float vId;
varying vec3 vIndex;

float ripple(float uv, float time, float prog) {
  float distance = length((uv) + time);
  return tan(distance * prog) * -0.01;
}

void main() {
  float time = abs(sin(uTime * 0.002));
  float time2 = sin(uTime * 0.001);
  float time3 = abs(sin(uTime * 0.001));
  float rippleUV = 0.0;
  float cols = uCols;
  float startshit = 0.0;
  float halfv = (vUvR.y - 1.0) * 7.0;
  float halfanim = 0.0;
  vec3 tex = vec3(0.0);
  float sumac = 0.0;
  time3 = abs(sin(uTime * 0.0008));
  time2 = sin(uTime * 0.0008);
  float mPos = 0.0;
  float mPower = 0.0;
  int index = int(vId);

  if (uKey == -2.0) {
    mPower = 1.0 - uStart;
    mPos = (uStart - 1.0) * 1.0;
    startshit = ((halfv * 0.001)) * uStart;
    sumac = ripple(vUvR.y, mPos, cols) * (0.4 * (1.0 - mPower + (1.0 * uPower)));
    rippleUV = vUv.x + startshit + sumac;
    tex = texture2D(tMap, vec2(rippleUV, vUv.y)).rgb;
  } else if (uKey != -1.0) {
    time2 = uMouse.x * -2.0;
    time3 = 0.0;
    halfanim = 1.0;
    mPos = uPowers[index] * -2.0;
    mPower = abs(uPowers[index] * (2.0 - abs(time2 * 0.5)));
    rippleUV = vUv.x + sumac;
    tex = texture2D(tMap, vec2(rippleUV, vUv.y)).rgb;
  } else {
    mPos = uPowers[index] * -2.0;
    mPower = abs(uPowers[index] * (2.0 - abs(time2 * 0.5)));
    sumac = ripple(vUv.y, mPos, cols) * (0.2 * (1.0 - mPower) * (1.0 - mPower));
    rippleUV = vUv.x + sumac;
    tex = texture2D(tMap, vec2(rippleUV, vUv.y)).rgb;
  }

  float signedDist = max(min(tex.r, tex.g), min(max(tex.r, tex.g), tex.b)) - 0.5;
  float d = fwidth(signedDist);
  float alpha = smoothstep(-d, d, signedDist);

  gl_FragColor.rgb = vec3(uColor);
  gl_FragColor.a = alpha * (1.0 - uStart * 1.9);
  if (uKey == -2.0) {
    gl_FragColor.a -= abs(sumac * 8.0);
  } else {
    gl_FragColor.a -= abs(sumac * 8.0);
  }
}
`

interface FooterProps {
  text: string
  position?: [number, number, number]
}

export function FooterWebGL({ text, position = [0, -1, 0] }: FooterProps) {
  const meshRef = useRef<Mesh>(null)
  const { gl, camera, size } = useThree()
  const mouse = useRef(new Vector2(0, 0))
  const texture = useTexture('/fonts/PPNeueMontreal-Medium.png')
  const uniforms = useMemo(
    () => ({
      tMap: { value: texture },
      uTime: { value: 0 },
      uScreen: { value: new Vector2(size.width, size.height) },
      uMouse: { value: new Vector2(0, 0) },
      uPower: { value: 0.5 },
      uCols: { value: text.length },
      uColor: { value: 1 },
      uStart: { value: 1 },
      uKey: { value: -2 },
      uPowers: { value: new Array(text.length).fill(0.5) },
      uWidth: { value: new Array(text.length).fill(0.1) },
      uHeight: { value: new Array(text.length).fill(0.1) },
    }),
    [text, texture, size]
  )

  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      const bound = gl.domElement.getBoundingClientRect()
      const x = ((e.clientX - bound.left) / bound.width) * 2 - 1
      const y = -((e.clientY - bound.top) / bound.height) * 2 + 1
      mouse.current.set(x, y)
    }
    window.addEventListener('mousemove', handleMouseMove)
    return () => window.removeEventListener('mousemove', handleMouseMove)
  }, [gl])

  useFrame(({ clock }) => {
    if (!meshRef.current) return
    const material = meshRef.current.material as ShaderMaterial
    material.uniforms.uTime.value = clock.getElapsedTime()
    material.uniforms.uMouse.value = mouse.current
    const powers = text.split('').map((_, i) => {
      const tot = mouse.current.x - (i * 0.1) / text.length
      return Math.min(Math.max(tot - 0.5, -0.5), 0.5)
    })
    material.uniforms.uPowers.value = powers
  })

  return (
    <mesh ref={meshRef} position={position}>
      <planeGeometry args={[text.length * 0.1, 0.1]} />
      <shaderMaterial
        vertexShader={vertexShader}
        fragmentShader={fragmentShader}
        uniforms={uniforms}
      />
    </mesh>
  )
}
```

### ./src/webgl/LoaderWebGL.tsx
```typescript
// src/webgl/LoaderWebGL.tsx 
'use client'

import { useFrame, useThree } from '@react-three/fiber'
import { useRef, useEffect } from 'react'
import { Mesh, ShaderMaterial, Vector2, PerspectiveCamera } from 'three'
import { animate } from 'framer-motion'
import { power2InOut } from '@/lib/easings'

const vertexShader = `
varying vec2 vUv;
void main() {
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`

const fragmentShader = `
precision highp float;
uniform float uTime;
uniform float uStart0;
uniform vec2 uResolution;
varying vec2 vUv;

void main() {
  vec2 uv = gl_FragCoord.xy / uResolution.xy;
  float time = uTime * 0.1;
  float r = sin(uv.x * 10.0 + time) * uStart0;
  vec3 color = vec3(r, r, r);
  gl_FragColor = vec4(color, 1.0);
}
`

export function LoaderWebGL({ onComplete }: { onComplete?: () => void }) {
  const meshRef = useRef<Mesh>(null)
  const { gl, camera, size } = useThree()
  const uniforms = useRef({
    uTime: { value: 0.0 },
    uStart0: { value: 0.0 },
    uResolution: { value: new Vector2(size.width, size.height) },
  })

  useEffect(() => {
    uniforms.current.uResolution.value.set(size.width, size.height)
    const perspectiveCamera = camera as PerspectiveCamera
    perspectiveCamera.fov = 45
    perspectiveCamera.aspect = size.width / size.height
    perspectiveCamera.position.set(0, 0, 7)
    perspectiveCamera.updateProjectionMatrix()
    gl.setSize(size.width, size.height)

    const controls = animate(uniforms.current.uStart0, { value: 1 }, {
      duration: 2.6,
      ease: power2InOut,
      onComplete,
    })

    return () => controls.stop()
  }, [gl, camera, size, onComplete])

  useFrame((state) => {
    if (meshRef.current) {
      const material = meshRef.current.material as ShaderMaterial
      material.uniforms.uTime.value = state.clock.getElapsedTime()
    }
  })

  return (
    <mesh ref={meshRef}>
      <planeGeometry args={[2, 2]} />
      <shaderMaterial
        vertexShader={vertexShader}
        fragmentShader={fragmentShader}
        uniforms={uniforms.current}
      />
    </mesh>
  )
}
```

### ./src/webgl/MediaWebGL.tsx
```typescript
// src/webgl/MediaWebGL.tsx 
```

### ./src/webgl/PgelWebGL.tsx
```typescript
// src/webgl/PgelWebGL.tsx 
```

### ./src/webgl/PgWebGL.tsx
```typescript
// src/webgl/PgWebGL.tsx 
```

### ./src/webgl/RollWebGL.tsx
```typescript
// src/webgl/RollWebGL.tsx 
```

### ./src/webgl/SliderWebGL.tsx
```typescript
// src/webgl/SliderWebGL.tsx 
```

### ./src/webgl/TitleWebGL.tsx
```typescript
// src/webgl/TitleWebGL.tsx 
'use client'

import { useFrame, useThree } from '@react-three/fiber'
import { useRef, useEffect, useMemo } from 'react'
import { Mesh, ShaderMaterial, Vector2 } from 'three'
import { Text } from '@react-three/drei'
import { power4InOut } from '@/lib/easings'

const vertexShader = `
  attribute vec2 uv;
  attribute vec3 position;
  attribute float id;
  attribute vec3 index;
  uniform mat4 modelViewMatrix;
  uniform mat4 projectionMatrix;
  uniform float uTime;
  uniform vec2 uMouse;
  uniform float uPower;
  uniform float uCols;
  uniform int uLength;
  varying vec2 vUv;
  varying vec2 vUvR;
  varying vec3 vPos;
  varying vec3 vIndex;
  varying float vId;

  void main() {
    vUv = uv;
    vUvR = vec2(gl_VertexID << 1 & 2, gl_VertexID & 2);
    vPos = position;
    vId = id;
    vIndex = index;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
  }
`

const fragmentShader = `
  precision highp float;
  uniform sampler2D tMap;
  uniform float uTime;
  uniform vec2 uScreen;
  uniform vec2 uMouse;
  uniform float uPower;
  uniform float uCols;
  uniform float uColor;
  uniform float uStart;
  uniform float uKey;
  uniform float uPowers[32];
  varying vec2 vUv;
  varying vec2 vUvR;
  varying vec3 vPos;
  varying float vId;
  varying vec3 vIndex;

  float ripple(float uv, float time, float prog) {
    float distance = length((uv) + time);
    return tan(distance * prog) * -0.01;
  }

  void main() {
    float time = abs(sin(uTime * 0.002));
    float time2 = sin(uTime * 0.001);
    float time3 = abs(sin(uTime * 0.001));
    float rippleUV = 0.0;
    float cols = uCols;
    float startshit = 0.0;
    float halfv = (vUvR.y - 1.0) * 7.0;
    float halfanim = 0.0;
    vec3 tex = vec3(0.0);
    float sumac = 0.0;
    time3 = abs(sin(uTime * 0.0008));
    time2 = sin(uTime * 0.0008);
    float mPos = 0.0;
    float mPower = 0.0;
    int index = int(vId);

    if (uKey == -2.0) {
      mPower = 1.0 - uStart;
      mPos = (uStart - 1.0) * 1.0;
      startshit = ((halfv * 0.001)) * uStart;
      sumac = ripple(vUvR.y, mPos, cols) * (0.4 * (1.0 - mPower + (1.0 * uPower)));
      rippleUV = vUv.x + startshit + sumac;
      tex = texture2D(tMap, vec2(rippleUV, vUv.y)).rgb;
    } else if (uKey != -1.0) {
      time2 = uMouse.x * -2.0;
      time3 = 0.0;
      halfanim = 1.0;
      mPos = uPowers[index] * -2.0;
      mPower = abs(uPowers[index] * (2.0 - abs(time2 * 0.5)));
      rippleUV = vUv.x + sumac;
      tex = texture2D(tMap, vec2(rippleUV, vUv.y)).rgb;
    } else {
      mPos = uPowers[index] * -2.0;
      mPower = abs(uPowers[index] * (2.0 - abs(time2 * 0.5)));
      sumac = ripple(vUv.y, mPos, cols) * (0.2 * (1.0 - mPower) * (1.0 - mPower));
      rippleUV = vUv.x + sumac;
      tex = texture2D(tMap, vec2(rippleUV, vUv.y)).rgb;
    }

    float signedDist = max(min(tex.r, tex.g), min(max(tex.r, tex.g), tex.b)) - 0.5;
    float d = fwidth(signedDist);
    float alpha = smoothstep(-d, d, signedDist);

    gl_FragColor.rgb = vec3(uColor);
    gl_FragColor.a = alpha * (1.0 - uStart * 1.9);
    if (uKey == -2.0) {
      gl_FragColor.a -= abs(sumac * 8.0);
    } else {
      gl_FragColor.a -= abs(sumac * 8.0);
    }
  }
`

interface TitleProps {
  text: string
  position?: [number, number, number]
}

export function Title({ text, position = [0, 0, 0] }: TitleProps) {
  const meshRef = useRef<Mesh>(null)
  const { gl, camera, size } = useThree()
  const mouse = useRef(new Vector2(0, 0))
  const [chars, setChars] = useState<string[]>([])
  const [isActive, setIsActive] = useState(-1)
  const [lerp, setLerp] = useState(0.6)
  const [currentChar, setCurrentChar] = useState(-2)
  const uniforms = useMemo(
    () => ({
      tMap: { value: null },
      uTime: { value: 0 },
      uScreen: { value: new Vector2(0, 0) },
      uMouse: { value: new Vector2(0, 0) },
      uPower: { value: 0.5 },
      uCols: { value: 0 },
      uColor: { value: 1 },
      uStart: { value: 1 },
      uKey: { value: -2 },
      uPowers: { value: [] },
      uWidth: { value: [] },
      uHeight: { value: [] },
    }),
    []
  )

  useEffect(() => {
    const chars = text.split('')
    setChars(chars)
    uniforms.uCols.value = chars.length
    uniforms.uPowers.value = new Array(chars.length).fill(0.5)
    uniforms.uWidth.value = chars.map(() => 0.1) // Approximate width
    uniforms.uHeight.value = chars.map(() => 0.1) // Approximate height
  }, [text, uniforms])

  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      const bound = gl.domElement.getBoundingClientRect()
      const x = ((e.clientX - bound.left) / bound.width) * 2 - 1
      const y = -((e.clientY - bound.top) / bound.height) * 2 + 1
      mouse.current.set(x, y)
    }
    window.addEventListener('mousemove', handleMouseMove)
    return () => window.removeEventListener('mousemove', handleMouseMove)
  }, [gl])

  useFrame(({ clock }) => {
    if (!meshRef.current) return
    const material = meshRef.current.material as ShaderMaterial
    material.uniforms.uTime.value = clock.getElapsedTime()
    material.uniforms.uMouse.value = mouse.current
    // Update powers based on mouse position (similar to calcChars)
    const powers = chars.map((_, i) => {
      const tot = mouse.current.x - (i * 0.1) / chars.length
      return Math.min(Math.max(tot - 0.5, -0.5), 0.5)
    })
    material.uniforms.uPowers.value = powers
  })

  return (
    <mesh ref={meshRef} position={position}>
      <planeGeometry args={[chars.length * 0.1, 0.1]} />
      <shaderMaterial
        uniforms={uniforms}
        vertexShader={vertexShader}
        fragmentShader={fragmentShader}
      />
    </mesh>
  )
}
```

