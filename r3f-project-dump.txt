# R3F Portfolio Project Dump
Generated on: Sat Jul 12 18:17:00 PDT 2025

## Project Structure
```
.
├── .contentlayer
│   ├── .cache
│   │   └── v0.5.8
│   │       ├── compiled-contentlayer-config-A4REP6OM.mjs
│   │       ├── compiled-contentlayer-config-A4REP6OM.mjs.map
│   │       └── data-A4REP6OM.json
│   ├── generated
│   │   ├── Project
│   │   │   ├── _index.json
│   │   │   └── _index.mjs
│   │   ├── index.d.ts
│   │   ├── index.mjs
│   │   └── types.d.ts
│   └── package.json
├── content
│   └── projects
│       ├── project1.md
│       └── project2.md
├── public
│   ├── fonts
│   │   ├── .DS_Store
│   │   ├── PPNeueMontreal-Medium.json
│   │   ├── PPNeueMontreal-Medium.png
│   │   ├── PPNeueMontreal-Medium.ttf
│   │   ├── PPNeueMontreal-Medium.woff
│   │   ├── PPNeueMontreal-Medium.woff2
│   │   ├── PPNeueMontrealMono-Book.woff
│   │   └── PPNeueMontrealMono-Book.woff2
│   ├── images
│   │   ├── 00_eva_sanchez_abou_home_website-1366x2049.jpg.webp
│   │   ├── 00_eva_sanchez_about_website-1366x2049.jpg.webp
│   │   ├── 00_eva_sanchez_about_website.jpg.webp
│   │   ├── 00_eva_sanchez_playground_website.jpg.webp
│   │   ├── 002_eva_sanchez_playground_website.jpg.webp
│   │   ├── 01_eva_sanchez_kids_agency_website-860x645.jpg.webp
│   │   ├── 01_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 01_eva_sanchez_playground_website.jpg.webp
│   │   ├── 01_eva_sanchez_vibia_landing_page_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_classe_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_classe_website.jpg.webp
│   │   ├── 02_eva_sanchez_now_new_next_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_playground_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_vibia_landing_page_website-860x645.jpg.webp
│   │   ├── 02_eva_sanchez_villalon_studio_website-860x645.jpg.webp
│   │   ├── 02.2_eva_sanchez_ciclope_fest_cover_website.jpg.webp
│   │   ├── 02.2_eva_sanchez_ciclope_fest_website-860x645.jpg.webp
│   │   ├── 02.2_eva_sanchez_ciclope_fest_website.jpg.webp
│   │   ├── 03_eva_sanchez_banjo_cover_soundscape_website.jpg.webp
│   │   ├── 03_eva_sanchez_classe_website-860x645.jpg.webp
│   │   ├── 03_eva_sanchez_classe_website.jpg.webp
│   │   ├── 03_eva_sanchez_kids_agency_website-860x645.jpg.webp
│   │   ├── 03_eva_sanchez_now_new_next_website-860x645.jpg.webp
│   │   ├── 03_eva_sanchez_playground_website.jpg.webp
│   │   ├── 03_eva_sanchez_vibia_landing_page_website-860x645.jpg.webp
│   │   ├── 04_eva_sanchez_ciclope_fest_website.jpg.webp
│   │   ├── 04_eva_sanchez_now_new_next_website-860x645.jpg.webp
│   │   ├── 04_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 04_eva_sanchez_playground_website.jpg.webp
│   │   ├── 04_eva_sanchez_vibia_landing_page_website-860x645.jpg.webp
│   │   ├── 04_eva_sanchez_villalon_studio_website-860x645.jpg.webp
│   │   ├── 05_eva_sanchez_ciclope_fest_website-860x645.jpg.webp
│   │   ├── 05_eva_sanchez_ciclope_fest_website.jpg.webp
│   │   ├── 05_eva_sanchez_classe_website-860x645.jpg.webp
│   │   ├── 05_eva_sanchez_classe_website.jpg.webp
│   │   ├── 05_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 05_eva_sanchez_playground_website.jpg.webp
│   │   ├── 05_eva_sanchez_villalon_studio_website-860x645.jpg.webp
│   │   ├── 06_eva_sanchez_classe_website-860x645.jpg.webp
│   │   ├── 06_eva_sanchez_classe_website.jpg.webp
│   │   ├── 06_eva_sanchez_paya_health_ecommerce_website-860x645.jpg.webp
│   │   ├── 06_eva_sanchez_playground_website.jpg.webp
│   │   ├── 07_eva_sanchez_banjo_soundscape_website-860x645.jpg.webp
│   │   ├── 07_eva_sanchez_playground_website.jpg.webp
│   │   ├── 08_eva_sanchez_ciclope_fest_website.jpg.webp
│   │   ├── 08_eva_sanchez_classe_website.jpg.webp
│   │   ├── 08_eva_sanchez_playground_website.jpg.webp
│   │   ├── 08_eva_sanchez_villalon_studio_website-860x645.jpg.webp
│   │   ├── 09_eva_sanchez_kids_agency_website-860x645.jpg.webp
│   │   ├── 09_eva_sanchez_playground_website.jpeg.webp
│   │   ├── 10_eva_sanchez_playground_website.jpg.webp
│   │   ├── 11_eva_sanchez_playground_website.jpg.webp
│   │   ├── 12_eva_sanchez_playground_website.jpg.webp
│   │   ├── 13_eva_sanchez_playground_website.jpg.webp
│   │   ├── 14_eva_sanchez_playground_website.jpg.webp
│   │   ├── 15_eva_sanchez_playground_website.jpg.webp
│   │   ├── 16_eva_sanchez_playground_website.jpg.webp
│   │   ├── 17_eva_sanchez_playground_website.jpg.webp
│   │   ├── 18_eva_sanchez_playground_website.jpg.webp
│   │   ├── 19_eva_sanchez_playground_website.jpg.webp
│   │   ├── 20_eva_sanchez_playground_website.jpg.webp
│   │   ├── 21_eva_sanchez_playground_website.jpg.webp
│   │   ├── 22_eva_sanchez_playground_website.jpg.webp
│   │   ├── 23_eva_sanchez_playground_website.jpg.webp
│   │   ├── 24_eva_sanchez_playground_website.jpg.webp
│   │   ├── 25_eva_sanchez_playground_website.jpg.webp
│   │   ├── 26_eva_sanchez_playground_website.jpg.webp
│   │   ├── 27_eva_sanchez_playground_website.jpg.webp
│   │   ├── 28_eva_sanchez_playground_website.jpg.webp
│   │   ├── 29_eva_sanchez_playground_website.jpg.webp
│   │   ├── 30_eva_sanchez_playground_website.jpg.webp
│   │   ├── 31_eva_sanchez_playground_website.jpg.webp
│   │   ├── 32_eva_sanchez_playground_website.jpg.webp
│   │   ├── 33_eva_sanchez_playground_website.jpg.webp
│   │   ├── 34_eva_sanchez_playground_website.jpg.webp
│   │   ├── 35_eva_sanchez_playground_website.jpg.webp
│   │   ├── 36_eva_sanchez_playground_website.jpg.webp
│   │   ├── 37_eva_sanchez_playground_website.jpg.webp
│   │   ├── 38_eva_sanchez_playground_website.jpg.webp
│   │   ├── 39_eva_sanchez_playground_website.jpg.webp
│   │   ├── 40_eva_sanchez_playground_website.jpg.webp
│   │   ├── 41_eva_sanchez_playground_website.jpg.webp
│   │   ├── 42_eva_sanchez_playground_website.jpg.webp
│   │   ├── 43_eva_sanchez_playground_website.jpg.webp
│   │   ├── 46_eva_sanchez_playground_website.jpg.webp
│   │   ├── 47_eva_sanchez_playground_website.jpg.webp
│   │   ├── 48_eva_sanchez_playground_website.jpg.webp
│   │   ├── 49_eva_sanchez_playground_website.jpg.webp
│   │   ├── 50_eva_sanchez_playground_website.jpg.webp
│   │   └── 51_eva_sanchez_playground_website.jpg.webp
│   ├── videos
│   │   ├── .DS_Store
│   │   ├── 00_eva_sanchez_kids_agency_cover_website.mp4
│   │   ├── 00_eva_sanchez_vibia_landing_page_cover_website.mp4
│   │   ├── 01_eva_sanchez_banjo_cover_soundscape_website.mp4
│   │   ├── 01_eva_sanchez_ciclope_fest_cover_website.mp4
│   │   ├── 01_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 01_eva_sanchez_classe_cover_website.mp4
│   │   ├── 01_eva_sanchez_classe_website.mp4
│   │   ├── 01_eva_sanchez_now_new_next_cover_website.mp4
│   │   ├── 02_eva_sanchez_banjo_cover_soundscape_website.mp4
│   │   ├── 02_eva_sanchez_ciclope_fest_cover_website.mp4
│   │   ├── 02_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 03_eva_sanchez_banjo_cover_soundscape_website.mp4
│   │   ├── 03_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 03_eva_sanchez_now_new_next_cover_website.mp4
│   │   ├── 04_eva_sanchez_classe_website.mp4
│   │   ├── 04_eva_sanchez_kids_agency_cover_website.mp4
│   │   ├── 06_eva_sanchez_ciclope_fest_cover_website.mp4
│   │   ├── 06_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 07_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 07_eva_sanchez_classe_website.mp4
│   │   ├── 09_eva_sanchez_ciclope_fest_website.mp4
│   │   ├── 09_eva_sanchez_classe_website.mp4
│   │   ├── 10_eva_sanchez_classe_website.mp4
│   │   ├── 44_eva_sanchez_playground_website.mp4
│   │   └── 45_eva_sanchez_playground_website.mp4
│   ├── .DS_Store
│   ├── file.svg
│   ├── globe.svg
│   ├── next.svg
│   ├── vercel.svg
│   └── window.svg
├── src
│   ├── .contentlayer
│   │   └── generated
│   ├── app
│   │   ├── (app)
│   │   │   ├── about
│   │   │   │   └── page.tsx
│   │   │   ├── index
│   │   │   │   └── page.tsx
│   │   │   ├── playground
│   │   │   │   └── page.tsx
│   │   │   ├── project
│   │   │   │   └── [slug]
│   │   │   │       └── page.tsx
│   │   │   ├── ClientLayout.tsx
│   │   │   ├── layout.tsx
│   │   │   └── page.tsx
│   │   └── globals.css
│   ├── components
│   │   ├── AnimatedText.tsx
│   │   ├── Footer.tsx
│   │   ├── Loader.tsx
│   │   ├── Mouse.tsx
│   │   ├── Nav.tsx
│   │   └── ProjectCard.tsx
│   ├── hooks
│   │   ├── useAnimationController.ts
│   │   ├── useMouseWatch.ts
│   │   └── useResponsiveSystem.ts
│   ├── lib
│   │   ├── easings.ts
│   │   ├── fonts.ts
│   │   ├── responsive.ts
│   │   └── utils.ts
│   ├── providers
│   │   ├── ScrollProvider.tsx
│   │   └── WebGLProvider.tsx
│   ├── styles
│   │   ├── about.pcss
│   │   ├── animations.pcss
│   │   ├── background.pcss
│   │   ├── design-system.pcss
│   │   ├── error.pcss
│   │   ├── footer.pcss
│   │   ├── home.pcss
│   │   ├── loader.pcss
│   │   ├── navigation.pcss
│   │   ├── playground.pcss
│   │   ├── project.pcss
│   │   ├── projects.pcss
│   │   ├── reset.pcss
│   │   └── typography.pcss
│   └── webgl
│       ├── About.tsx
│       ├── Background.tsx
│       ├── Canvas.tsx
│       ├── Footer.tsx
│       ├── Loader.tsx
│       ├── Media.tsx
│       ├── Page.tsx
│       ├── PageElement.tsx
│       ├── Pg.tsx
│       ├── Roll.tsx
│       ├── Slider.tsx
│       └── Title.tsx
├── .DS_Store
├── .env
├── .gitignore
├── contentlayer.config.ts
├── eslint.config.mjs
├── generate-project-dump-xml.sh
├── generate-project-dump.sh
├── next-env.d.ts
├── next.config.ts
├── package.json
├── postcss.config.js
├── postcss.config.mjs
├── project-dump.txt
├── README.md
└── tsconfig.json

28 directories, 206 files
```

## Package Configuration

### package.json
```json
{
  "name": "r3f",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@react-three/drei": "^10.5.0",
    "@react-three/fiber": "^9.2.0",
    "clsx": "^2.1.1",
    "contentlayer2": "^0.5.8",
    "framer-motion": "^12.23.3",
    "graphql": "^16.11.0",
    "lenis": "^1.3.4",
    "next": "15.3.5",
    "next-contentlayer2": "^0.5.8",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "split-type": "^0.3.4",
    "three": "^0.178.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@types/node": "^24.0.13",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/three": "^0.178.1",
    "autoprefixer": "^10.4.21",
    "cssnano": "^7.0.7",
    "eslint": "^9.31.0",
    "eslint-config-next": "15.3.5",
    "postcss": "^8.5.6",
    "postcss-custom-media": "^11.0.6",
    "postcss-custom-properties": "^14.0.6",
    "postcss-import": "^16.1.1",
    "postcss-nested": "^7.0.2",
    "typescript": "^5.8.3"
  }
}
```

### tsconfig.json
```json
{
  "compilerOptions": {
    "baseUrl": "src",
    "target": "ES2017",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": [
        "./src/*"
      ],
      "contentlayer/generated": ["./.contentlayer/generated"]
    },
  },
  "include": [
    "src",
    ".contentlayer",
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}```

### next.config.ts
```typescript
// next.config.js
const { withContentlayer } = require('next-contentlayer2')

/** @type {import('next').NextConfig} */
const nextConfig = {
  // Your existing config
}

module.exports = withContentlayer(nextConfig)```

### postcss.config.mjs
```javascript
const config = {
  plugins: ["@tailwindcss/postcss"],
};

export default config;
```

### eslint.config.mjs
```javascript
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;
```

## Source Files

### ./.contentlayer/.cache/v0.5.8/compiled-contentlayer-config-A4REP6OM.mjs
```javascript
// contentlayer.config.ts
import { defineDocumentType, makeSource } from "contentlayer2/source-files";
var Project = defineDocumentType(() => ({
  name: "Project",
  filePathPattern: `projects/*.md`,
  fields: {
    title: { type: "string", required: true },
    description: { type: "string", required: true },
    image: { type: "string" },
    slug: { type: "string", required: true },
    tags: { type: "list", of: { type: "string" } },
    date: { type: "date" }
  }
}));
var contentlayer_config_default = makeSource({
  contentDirPath: "content",
  documentTypes: [Project]
});
export {
  Project,
  contentlayer_config_default as default
};
//# sourceMappingURL=compiled-contentlayer-config-A4REP6OM.mjs.map
```

### ./.contentlayer/generated/index.d.ts
```typescript
// NOTE This file is auto-generated by Contentlayer

import { Project, DocumentTypes, DataExports } from './types'
import { SourceProvideSchemaErrorJSON, SourceFetchDataErrorJSON } from 'contentlayer2/core'

export * from './types'

export declare const allProjects: Project[]

export declare const allDocuments: DocumentTypes[]


```

### ./.contentlayer/generated/index.mjs
```javascript
// NOTE This file is auto-generated by Contentlayer

export { isType } from 'contentlayer2/client'

// NOTE During development Contentlayer imports from `.mjs` files to improve HMR speeds.
// During (production) builds Contentlayer it imports from `.json` files to improve build performance.
import allProjects from './Project/_index.json' with { type: 'json' }

export { allProjects }

export const allDocuments = [...allProjects]


```

### ./.contentlayer/generated/Project/_index.mjs
```javascript
// NOTE This file is auto-generated by Contentlayer



export const allProjects = []
```

### ./.contentlayer/generated/types.d.ts
```typescript
// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  title: string
  description: string
  image?: string | undefined
  slug: string
  tags?: string[] | undefined
  date?: IsoDateTimeString | undefined
  /** Markdown file body */
  body: Markdown

}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Project
export type DocumentTypeNames = 'Project'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allProjects: Project[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Project: Project
}

export type NestedTypeMap = {

}

 ```

### ./contentlayer.config.ts
```typescript
import { defineDocumentType, makeSource } from 'contentlayer2/source-files'

export const Project = defineDocumentType(() => ({
  name: 'Project',
  filePathPattern: `projects/*.md`,
  fields: {
    title: { type: 'string', required: true },
    description: { type: 'string', required: true },
    image: { type: 'string' },
    slug: { type: 'string', required: true },
    tags: { type: 'list', of: { type: 'string' } },
    date: { type: 'date' },
  },
}))

export const About = defineDocumentType(() => ({
  name: 'About',
  filePathPattern: `about.md`,
  fields: {
    title: { type: 'string', required: true },
    description: { type: 'string', required: true },
  },
}))

export default makeSource({
  contentDirPath: 'content',
  documentTypes: [Project, About],
})```

### ./eslint.config.mjs
```javascript
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;
```

### ./next-env.d.ts
```typescript
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.
```

### ./next.config.ts
```typescript
// next.config.js
const { withContentlayer } = require('next-contentlayer2')

/** @type {import('next').NextConfig} */
const nextConfig = {
  // Your existing config
}

module.exports = withContentlayer(nextConfig)```

### ./postcss.config.js
```javascript
module.exports = {
  plugins: {
    'postcss-import': {},
    'postcss-nested': {},
    'postcss-custom-properties': {},
    'postcss-custom-media': {},
    'autoprefixer': {},
    'cssnano': process.env.NODE_ENV === 'production' ? {} : false,
  },
}
```

### ./postcss.config.mjs
```javascript
const config = {
  plugins: ["@tailwindcss/postcss"],
};

export default config;
```

### ./src/app/(app)/about/page.tsx
```typescript
```

### ./src/app/(app)/ClientLayout.tsx
```typescript
// src/app/(app)/ClientLayout.tsx
'use client'

import { useResponsiveSystem } from '@/hooks/useResponsiveSystem'

export function ClientLayout({ children }: { children: React.ReactNode }) {
  // Initialize responsive system
  useResponsiveSystem()
  
  return <>{children}</>
}
```

### ./src/app/(app)/index/page.tsx
```typescript
```

### ./src/app/(app)/layout.tsx
```typescript
// src/app/(app)/layout.tsx
import type { Metadata } from 'next'
import { Footer } from '@/components/layout/Footer'
import { ClientLayout } from './ClientLayout'

export const metadata: Metadata = {
  title: 'Eva Sánchez - Interactive Designer',
  description: 'Interactive Designer, also Speaker & Teacher',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body>
        <ClientLayout>
          {/* Background grid */}
          <div className="Mbg">
            <div className="col"></div>
            <div className="col"></div>
            <div className="col"></div>
            <div className="col"></div>
            <div className="col"></div>
          </div>
          
          <main className="home">
            {children}
          </main>
          
          <Footer />
        </ClientLayout>
      </body>
    </html>
  )
}```

### ./src/app/(app)/page.tsx
```typescript
// src/app/(app)/page.tsx
import { useAnimationController } from '@/hooks/useAnimationController'
import { AnimatedText } from '@/components/AnimatedText'
import { WebGLProvider } from '@/providers/WebGLProvider'
import { Title } from '@/webgl/Title'

export default function HomePage() {
  return (
    <>
      {/* Hero Section */}
      <section className="home_hero">
        <div className="c-vw cnt">
          <div className="cnt_hold">
            <div className="cnt_tt">
              <div className="Atitle">
                <AnimatedText className="tt1">Eva</AnimatedText>
              </div>
              <div className="Atitle">
                <AnimatedText className="tt1">Sánchez</AnimatedText>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Featured Works Section */}
      <section className="home_prjs">
        <div className="c-vw cnt">
          <div className="cnt_t">
            <div className="Atitle">
              <AnimatedText className="tt1">Featured works</AnimatedText>
            </div>
            <div className="Awrite">
              <AnimatedText className="tt3">[003]</AnimatedText>
            </div>
          </div>
        </div>
      </section>

      {/* About Section */}
      <section className="home_about">
        <div className="c-vw cnt">
          <div className="cnt_tp">
            <div className="Atitle">
              <AnimatedText className="tt1 text-light">Interactive Designer,</AnimatedText>
            </div>
            <div className="Atitle">
              <AnimatedText className="tt1 text-light">also Speaker & Teacher</AnimatedText>
            </div>
          </div>
        </div>
      </section>
    </>
  )
}```

### ./src/app/(app)/playground/page.tsx
```typescript
```

### ./src/app/(app)/project/[slug]/page.tsx
```typescript
```

### ./src/app/globals.css
```css
/* src/app/globals.css */

@import '../styles/reset.pcss';
@import '../styles/typography.pcss';
@import '../styles/design-system.pcss';
@import '../styles/animations.pcss';
@import '../styles/home.pcss';
@import '../styles/navigation.pcss';
@import '../styles/footer.pcss';
@import '../styles/loader.pcss';
@import '../styles/background.pcss';
@import '../styles/about.pcss';
@import '../styles/error.pcss';
@import '../styles/playground.pcss';
@import '../styles/project.pcss';
@import '../styles/projects.pcss';

/* Global styles */
html {
  scroll-behavior: smooth;
}

body {
  font-family: 'montrealbook', sans-serif;
  color: var(--color-text-primary);
  background: var(--color-bg-primary);
  overflow-x: hidden;
}

/* Prevent scroll restoration */
html {
  scroll-behavior: auto;
}

/* Lenis smooth scroll classes */
.lenis-stopped {
  overflow: hidden;
}

/* Font Declarations */
@font-face {
  font-family: 'montreal';
  font-display: swap;
  src: url('/fonts/PPNeueMontreal-Medium.woff2') format('woff2');
  font-weight: 500;
}

@font-face {
  font-family: 'montrealbook';
  font-display: swap;
  src: url('/fonts/PPNeueMontrealMono-Book.woff2') format('woff2');
  font-weight: 400;
}

/* Base HTML and Body styles */
html {
  font-size: var(--base-font-size);
  line-height: var(--base-line-height);
}

body {
  font-family: var(--font-primary);
  background-color: var(--color-bg-primary);
  color: var(--color-text-primary);
  font-weight: var(--font-weight-normal);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-x: hidden;
}```

### ./src/components/AnimatedText.tsx
```typescript
'use client'

import { motion, Variants, AnimatePresence } from 'framer-motion'
import { useMemo, useEffect, useRef, useState } from 'react'
import SplitType from 'split-type'
import { power2InOut, power4InOut } from '@/lib/easings'

// Fake characters and timings from anims.js
const FAKE_CHARS = '##·$%&/=€|()@+09*+]}{['.split('')
const TIMINGS = {
  default: { realDuration: 0.3, charStagger: 0.05, fakeDuration: 0.16, fakeDelayBase: 0.05, fakeStagger: 0.016 },
  line: { realDuration: 0.3, charStagger: 0.05, fakeDuration: 0.16, fakeDelayBase: 0.05, fakeStagger: 0.016 },
  Ms: { realDuration: 0.22, charStagger: 0.05, fakeDuration: 0.16, fakeDelayBase: 0.05, fakeStagger: 0.016 },
}
const LINE_ANIMATION = { duration: 0.6, stagger: 0.1 }

interface AnimatedTextProps {
  text: string
  el?: keyof JSX.IntrinsicElements
  className?: string
  startDelay?: number
  type?: 'char' | 'line' | 'text'
  isVisible?: boolean
  instant?: boolean
  timing?: 'default' | 'line' | 'Ms'
  bucle?: boolean
  onAnimationComplete?: () => void
  isWebGL?: boolean
}

interface CharData {
  key: string
  char: string
  fake1: string
  fake2: string
}

export function AnimatedText({
  text,
  el: Wrapper = 'p',
  className = '',
  startDelay = 0,
  type = 'char',
  isVisible = true,
  instant = false,
  timing = 'default',
  bucle = false,
  onAnimationComplete,
  isWebGL = false,
}: AnimatedTextProps) {
  const [isIvi, setIsIvi] = useState(false)
  const ref = useRef<HTMLElement>(null)
  const [chars, setChars] = useState<CharData[]>([])
  const [lines, setLines] = useState<string[]>([])

  // Split text using SplitType
  useEffect(() => {
    if (!ref.current) return

    if (type === 'char') {
      const split = new SplitType(ref.current, { types: 'chars' })
      const charElements = split.chars || []
      setChars(
        charElements.map((el, index) => {
          const char = el.textContent || ''
          el.innerHTML = `<span class="n">${char}</span><span class="f" aria-hidden="true">${
            FAKE_CHARS[Math.floor(Math.random() * FAKE_CHARS.length)]
          }</span><span class="f" aria-hidden="true">${
            FAKE_CHARS[Math.floor(Math.random() * FAKE_CHARS.length)]
          }</span>`
          return {
            key: `${index}-${char}`,
            char: char === ' ' ? '\u00A0' : char,
            fake1: FAKE_CHARS[Math.floor(Math.random() * FAKE_CHARS.length)],
            fake2: FAKE_CHARS[Math.floor(Math.random() * FAKE_CHARS.length)],
          }
        })
      )
      return () => split.revert()
    } else if (type === 'line' || type === 'text') {
      const split = new SplitType(ref.current, { types: 'lines' })
      setLines(split.lines?.map((el) => el.textContent || '') || [])
      return () => split.revert()
    }
  }, [text, type])

  // Handle animation completion
  useEffect(() => {
    if (isIvi && onAnimationComplete) {
      onAnimationComplete()
      if (bucle) {
        const event = new CustomEvent('anim', { detail: { state: 1, el: ref.current } })
        document.dispatchEvent(event)
      }
    }
  }, [isIvi, onAnimationComplete, bucle])

  // Character animation variants
  const containerVariants: Variants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: { staggerChildren: TIMINGS[timing].charStagger, delayChildren: startDelay },
    },
    exit: { opacity: 0, transition: { duration: 0.4, ease: power4InOut } },
  }

  const realCharVariants: Variants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: { duration: TIMINGS[timing].realDuration, ease: power4InOut },
    },
    exit: {
      opacity: 0,
      transition: { duration: 0.2, ease: power4InOut },
    },
  }

  const fakeCharVariants = (charIndex: number, fakeIndex: number): Variants => ({
    hidden: { scaleX: 1, opacity: 1, display: 'inline-block' },
    visible: {
      scaleX: 0,
      opacity: 0,
      display: 'none',
      transition: {
        scaleX: { duration: TIMINGS[timing].fakeDuration, ease: power4InOut },
        opacity: { duration: TIMINGS[timing].fakeDuration, ease: power4InOut },
        display: { delay: TIMINGS[timing].fakeDuration },
        delay: startDelay + (charIndex * TIMINGS[timing].fakeDelayBase) + ((1 + fakeIndex) * TIMINGS[timing].fakeStagger),
      },
    },
    exit: {
      scaleX: 1,
      opacity: 1,
      transition: { duration: 0.12, ease: power4InOut },
    },
  })

  // Line animation variants
  const lineContainerVariants: Variants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: { staggerChildren: LINE_ANIMATION.stagger, delayChildren: startDelay },
    },
    exit: { opacity: 0, transition: { duration: 0.4, ease: power4InOut } },
  }

  const lineVariants: Variants = {
    hidden: { opacity: 0, y: '50%' },
    visible: {
      opacity: 1,
      y: '0%',
      transition: { duration: LINE_ANIMATION.duration, ease: power2InOut },
    },
    exit: {
      opacity: 0,
      transition: { duration: 0.2, ease: power2InOut },
    },
  }

  // WebGL variants
  const webGLVariants: Variants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: { duration: TIMINGS[timing].realDuration, ease: power4InOut },
    },
    exit: { opacity: 0, transition: { duration: 0.2, ease: power4InOut } },
  }

  return (
    <Wrapper ref={ref} className={`${className} ${isIvi ? 'ivi' : ''}`} aria-label={type === 'char' ? text : undefined}>
      <AnimatePresence
        onExitComplete={() => {
          setIsIvi(false)
        }}
      >
        {isVisible && (
          isWebGL ? (
            <motion.group
              variants={containerVariants}
              initial={instant ? 'visible' : 'hidden'}
              animate="visible"
              exit="exit"
              onAnimationComplete={() => setIsIvi(true)}
            >
              {chars.map(({ key, char }, index) => (
                <Text
                  key={key}
                  font="/fonts/helvetiker_regular.typeface.json"
                  fontSize={0.1}
                  position={[index * 0.1, 0, 0]}
                  color="white"
                >
                  {char}
                  <motion.meshBasicMaterial
                    variants={webGLVariants}
                    initial={instant ? 'visible' : 'hidden'}
                    animate="visible"
                    exit="exit"
                  />
                </Text>
              ))}
            </motion.group>
          ) : type === 'char' ? (
            <motion.span
              className="animated-text-container"
              variants={containerVariants}
              initial={instant ? 'visible' : 'hidden'}
              animate="visible"
              exit="exit"
              onAnimationComplete={() => setIsIvi(true)}
            >
              {chars.map(({ key, char, fake1, fake2 }, charIndex) => (
                <motion.span key={key} className="char" variants={realCharVariants}>
                  <span className="n">{char}</span>
                  <motion.span className="f" variants={fakeCharVariants(charIndex, 0)} aria-hidden="true">
                    {fake1}
                  </motion.span>
                  <motion.span className="f" variants={fakeCharVariants(charIndex, 1)} aria-hidden="true">
                    {fake2}
                  </motion.span>
                </motion.span>
              ))}
            </motion.span>
          ) : (
            <motion.div
              className="line-container"
              variants={lineContainerVariants}
              initial={instant ? 'visible' : 'hidden'}
              animate="visible"
              exit="exit"
              onAnimationComplete={() => setIsIvi(true)}
            >
              {lines.map((line, index) => (
                <motion.div key={index} variants={lineVariants} className="line">
                  {type === 'text' ? (
                    <AnimatedText
                      text={line}
                      type="char"
                      timing={timing}
                      startDelay={index * 0.15}
                      isVisible={isVisible}
                      instant={instant}
                      isWebGL={isWebGL}
                    />
                  ) : (
                    line
                  )}
                </motion.div>
              ))}
            </motion.div>
          )
        )}
      </AnimatePresence>
    </Wrapper>
  )
}```

### ./src/components/Footer.tsx
```typescript
// src/components/layout/Footer.tsx
export function Footer() {
  return (
    <footer className="footer">
      <div className="c-vw">
        <div className="tt1">Get in touch</div>
      </div>
    </footer>
  )
}
```

### ./src/components/Loader.tsx
```typescript
```

### ./src/components/Mouse.tsx
```typescript
```

### ./src/components/Nav.tsx
```typescript
```

### ./src/components/ProjectCard.tsx
```typescript
```

### ./src/hooks/useAnimationController.ts
```typescript
// src/hooks/useAnimationController.ts
import { useState, useEffect } from 'react'

export function useAnimationController() {
  const [isLoading, setIsLoading] = useState(true)
  const [currentPage, setCurrentPage] = useState('/')

  useEffect(() => {
    // Simulate asset loading
    setTimeout(() => setIsLoading(false), 2000)
  }, [])

  const handleNavigation = (newPage: string) => {
    setCurrentPage(newPage)
    // Trigger page transition animations
  }

  return { isLoading, currentPage, handleNavigation }
}```

### ./src/hooks/useMouseWatch.ts
```typescript
```

### ./src/hooks/useResponsiveSystem.ts
```typescript
// src/hooks/useResponsiveSystem.tsx

'use client'

import { useEffect } from 'react'
import { initializeResponsiveSystem, updateResponsiveSystem } from '@/lib/utils/responsive'

export function useResponsiveSystem() {
  useEffect(() => {
    // Initialize on mount
    initializeResponsiveSystem()

    // Update on resize
    const handleResize = () => {
      updateResponsiveSystem()
    }

    window.addEventListener('resize', handleResize)
    
    return () => {
      window.removeEventListener('resize', handleResize)
    }
  }, [])
}
```

### ./src/lib/easings.ts
```typescript
// src/lib/easings.ts
// GSAP's Power2.inOut
export const power2InOut = [0.68, 0, 0.32, 1]

// GSAP's Power4.inOut
export const power4InOut = [0.76, 0, 0.24, 1]
```

### ./src/lib/fonts.ts
```typescript
// src/lib/fonts.ts
import localFont from 'next/font/local'

// Define your local fonts
export const montreal = localFont({
  src: '../../public/fonts/PPNeueMontreal-Medium.woff2',
  display: 'swap',
  variable: '--font-montreal', // This is the CSS variable name
})

export const montrealbook = localFont({
  src: '../../public/fonts/PPNeueMontrealMono-Book.woff2',
  display: 'swap',
  variable: '--font-montrealbook', // This is the CSS variable name
})```

### ./src/lib/responsive.ts
```typescript
// src/lib/utils/responsive.ts - Constructor equivalent for responsive system

interface DesignConfig {
  L: {
    w: number
    h: number
    multi: number
    total: number
    ratio: number
  }
  P: {
    w: number
    h: number
    multi: number
    total: number
  }
}

export const designConfig: DesignConfig = {
  L: {
    w: 1440,
    h: 800,
    multi: 0.4,
    total: 0,
    ratio: 5.56
  },
  P: {
    w: 390,
    h: 640,
    multi: 0.4,
    total: 0
  }
}

export function initializeResponsiveSystem() {
  // Calculate responsive multipliers
  designConfig.L.total = (designConfig.L.w / window.innerWidth) * 10
  designConfig.L.total = 10 - ((10 - designConfig.L.total) * designConfig.L.multi)
  designConfig.L.total = Math.min(10, designConfig.L.total)

  designConfig.P.total = (designConfig.P.w / window.innerWidth) * 10
  designConfig.P.total = 10 - ((10 - designConfig.P.total) * designConfig.P.multi)
  designConfig.P.total = Math.min(10, designConfig.P.total)

  // Set CSS custom properties
  document.documentElement.style.setProperty('--ck_multiL', designConfig.L.total.toString())
  document.documentElement.style.setProperty('--ck_multiP', designConfig.P.total.toString())
  document.documentElement.style.setProperty('--ck_hvar', `${window.innerHeight}px`)
  document.documentElement.style.setProperty('--ck_accent', '#fff')
  document.documentElement.style.setProperty('--ck_other', '#050505')

  // Device detection classes
  const isTouch = 'ontouchstart' in window
  if (isTouch) {
    document.documentElement.classList.add('T')
    document.documentElement.style.setProperty('--ck_hscr', `${window.screen.height}px`)
  } else {
    document.documentElement.classList.add('D')
    document.documentElement.style.setProperty('--ck_hscr', `${window.innerHeight}px`)
  }
}

export function updateResponsiveSystem() {
  initializeResponsiveSystem()
}
```

### ./src/lib/utils.ts
```typescript
// src/lib/utils.ts
import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue) {
  return twMerge(clsx(inputs))
}```

### ./src/providers/ScrollProvider.tsx
```typescript
// src/providers/ScrollProvider.tsx
import { Lenis } from 'lenis'
import { useEffect, useRef } from 'react'

export function ScrollProvider({ children }) {
  const lenisRef = useRef(null)

  useEffect(() => {
    lenisRef.current = new Lenis({
      lerp: 0.04,
      duration: 0.8,
      smoothWheel: true,
    })

    function raf(time) {
      lenisRef.current.raf(time)
      requestAnimationFrame(raf)
    }

    requestAnimationFrame(raf)

    return () => {
      lenisRef.current.destroy()
    }
  }, [])

  return <Lenis root>{children}</Lenis>
}```

### ./src/providers/WebGLProvider.tsx
```typescript
// src/providers/WebGLProvider.tsx
import { Canvas } from '@react-three/fiber'
import { useThree } from '@react-three/fiber'
import { useEffect } from 'react'

export function WebGLProvider({ children }) {
  const { gl } = useThree()

  useEffect(() => {
    // Global WebGL setup (e.g., pixel ratio, antialiasing)
  }, [gl])

  return (
    <Canvas
      gl={{ antialias: true }}
      camera={{ position: [0, 0, 5], fov: 75 }}
      style={{ width: '100%', height: '100vh' }}
    >
      {children}
    </Canvas>
  )
}```

### ./src/webgl/About.tsx
```typescript
```

### ./src/webgl/Background.tsx
```typescript
```

### ./src/webgl/Canvas.tsx
```typescript
```

### ./src/webgl/Footer.tsx
```typescript
```

### ./src/webgl/Loader.tsx
```typescript
```

### ./src/webgl/Media.tsx
```typescript
```

### ./src/webgl/Page.tsx
```typescript
```

### ./src/webgl/PageElement.tsx
```typescript
```

### ./src/webgl/Pg.tsx
```typescript
```

### ./src/webgl/Roll.tsx
```typescript
```

### ./src/webgl/Slider.tsx
```typescript
```

### ./src/webgl/Title.tsx
```typescript
import { useFrame } from '@react-three/fiber'
import { useRef } from 'react'
import { Text } from '@react-three/drei'
import { power4InOut } from '@/lib/easings'

export function Title({ text, position = [0, 0, 0] }) {
  const textRef = useRef()

  useFrame((state, delta) => {
    // Add hover or scroll-based animations
  })

  return (
    <Text
      ref={textRef}
      fontSize={1}
      color="white"
      position={position}
      anchorX="center"
      anchorY="middle"
      font="/fonts/helvetiker_regular.typeface.json"
    >
      {text}
    </Text>
  )
}```

